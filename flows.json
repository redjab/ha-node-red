[
    {
        "id": "d9fe96b5.8701c8",
        "type": "tab",
        "label": "Simple automations",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6054ff63.2ff7c",
        "type": "tab",
        "label": "3D Printer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9889ef6.6e2771",
        "type": "tab",
        "label": "Event listeners",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e2c67c6c.68265",
        "type": "tab",
        "label": "Reminders",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7593ec4d.460434",
        "type": "tab",
        "label": "Garage door",
        "disabled": false,
        "info": ""
    },
    {
        "id": "57667353.82973c",
        "type": "tab",
        "label": "Water plants",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f71ac145.59035",
        "type": "tab",
        "label": "Lock",
        "disabled": false,
        "info": ""
    },
    {
        "id": "96cf0f5b.b0f5e",
        "type": "tab",
        "label": "Thermostat",
        "disabled": false,
        "info": ""
    },
    {
        "id": "670bc302.cb732c",
        "type": "subflow",
        "name": "Notify HA apps",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "5934701d.5e303"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 100,
                "wires": [
                    {
                        "id": "5a2b4568.2d2c5c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 40,
                "wires": [
                    {
                        "id": "8495431f.f4f32",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "cfb8073e.876f88",
        "type": "subflow",
        "name": "Update light state",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 140,
                "wires": [
                    {
                        "id": "b62cc54a.e92368"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 340,
                "wires": [
                    {
                        "id": "bf7a5591.a95cc8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "entity_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "interval",
                "type": "num",
                "value": "50"
            },
            {
                "name": "delay",
                "type": "num",
                "value": "0"
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "a548685b.826b08",
        "type": "subflow",
        "name": "Disconnect octoprint & shutdown printer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "1025cd35.a899e3"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3efaa203.1c443e",
        "type": "server",
        "name": "Home Assistant",
        "version": 2,
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": false,
        "heartbeat": false,
        "heartbeatInterval": 30
    },
    {
        "id": "7c8c59df.9fc818",
        "type": "comment",
        "z": "670bc302.cb732c",
        "name": "Notify HA apps & logs to HA",
        "info": "",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "5a2b4568.2d2c5c",
        "type": "api-call-service",
        "z": "670bc302.cb732c",
        "name": "Notify HA apps",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": true,
        "service_domain": "notify",
        "service": "{{payload.notify_whom}}",
        "entityId": "",
        "data": "$$.payload.notification",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "4168cf8ce273af8b"
            ]
        ]
    },
    {
        "id": "8495431f.f4f32",
        "type": "api-call-service",
        "z": "670bc302.cb732c",
        "name": "Log",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "logbook",
        "service": "log",
        "entityId": "",
        "data": "$$.payload.log",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": true,
        "outputProperties": [],
        "queue": "none",
        "x": 630,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "5934701d.5e303",
        "type": "function",
        "z": "670bc302.cb732c",
        "name": "",
        "func": "if (msg && msg.payload) {\n    let notification = msg.payload.notification || {};\n    let data = notification.data || {};\n        \n    if (!msg.payload.notify_whom) {\n        msg.payload = Object.assign(msg.payload, { notify_whom: 'all_phone_app_except_chrome' })\n    }\n    \n    if (notification.message === \"clear_notification\" &&  [\"all_phone_app\", \"chrome\"].includes(msg.payload.notify_whom)) {\n        if (msg.payload.notify_whom === \"all_phone_app\") {\n            msg.payload = Object.assign(msg.payload, { notify_whom: 'all_phone_app_except_chrome' });\n        } else {\n            msg.payload = Object.assign(msg.payload, { notify_whom: '' });\n        }\n    }\n    \n    if (notification.title === 'clear_notification') {\n        msg.payload.log = undefined;\n    }\n    \n    if (msg.payload.log) {\n        msg.payload.log = { ...msg.payload.log, domain: 'notify' }\n    }\n\n    if (!data.clickAction) {\n        msg.payload.notification.data = Object.assign(data, { clickAction: '/lovelace-test/default_view' });\n    }\n    \n    if (data.clickAction) {\n        msg.payload.notification.data.url = data.clickAction;\n    }\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 100,
        "wires": [
            [
                "5a2b4568.2d2c5c"
            ]
        ]
    },
    {
        "id": "4168cf8ce273af8b",
        "type": "switch",
        "z": "670bc302.cb732c",
        "name": "Has log",
        "property": "payload.log",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 40,
        "wires": [
            [
                "8495431f.f4f32"
            ]
        ]
    },
    {
        "id": "bf7a5591.a95cc8",
        "type": "api-call-service",
        "z": "cfb8073e.876f88",
        "name": "Update state",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "homeassistant",
        "service": "update_entity",
        "entityId": "",
        "data": "{ \"entity_id\": $env('entity_id') }",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 730,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "2282d523.7b19ca",
        "type": "function",
        "z": "cfb8073e.876f88",
        "name": "Light Toggle",
        "func": "const entity = env.get('entity_id');\nconst payloadEntity = msg.payload.event.service_data.entity_id;\nconst payloadDomain = msg.payload.event.domain;\n\nconst correctEntity = Array.isArray(payloadEntity) ? payloadEntity.includes(entity) : payloadEntity === entity;\nconst correctDomain = payloadDomain === 'switch' || payloadDomain === 'light';\nreturn { \n    payload: correctEntity && correctDomain\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "e944a0e9.8f98b"
            ]
        ]
    },
    {
        "id": "e944a0e9.8f98b",
        "type": "switch",
        "z": "cfb8073e.876f88",
        "name": "true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 40,
        "wires": [
            [
                "e60caf73.30a49"
            ]
        ]
    },
    {
        "id": "e79da058.cfc2f",
        "type": "trigger",
        "z": "cfb8073e.876f88",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-50",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "bf7a5591.a95cc8",
                "18d7822a.92842e"
            ]
        ]
    },
    {
        "id": "1241bdd8.2da8c2",
        "type": "change",
        "z": "cfb8073e.876f88",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 520,
        "wires": [
            [
                "18d7822a.92842e",
                "46f4751b.1d84fc"
            ]
        ]
    },
    {
        "id": "18d7822a.92842e",
        "type": "counter",
        "z": "cfb8073e.876f88",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": "1",
        "x": 740,
        "y": 460,
        "wires": [
            [
                "48443e86.5bc42"
            ]
        ]
    },
    {
        "id": "48443e86.5bc42",
        "type": "switch",
        "z": "cfb8073e.876f88",
        "name": ">10",
        "property": "count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "10",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 520,
        "wires": [
            [
                "1241bdd8.2da8c2"
            ]
        ]
    },
    {
        "id": "b62cc54a.e92368",
        "type": "function",
        "z": "cfb8073e.876f88",
        "name": "Input handler",
        "func": "if (msg.topic === 'service') {\n    return [msg, null];\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "2282d523.7b19ca"
            ],
            [
                "1241bdd8.2da8c2"
            ]
        ]
    },
    {
        "id": "46f4751b.1d84fc",
        "type": "switch",
        "z": "cfb8073e.876f88",
        "name": "",
        "property": "interval",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "50",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "125",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 340,
        "wires": [
            [
                "e79da058.cfc2f"
            ],
            [
                "878b8c84.67094"
            ]
        ]
    },
    {
        "id": "878b8c84.67094",
        "type": "trigger",
        "z": "cfb8073e.876f88",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-125",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 500,
        "y": 360,
        "wires": [
            [
                "18d7822a.92842e",
                "bf7a5591.a95cc8"
            ]
        ]
    },
    {
        "id": "9d0384ee.324008",
        "type": "delay",
        "z": "cfb8073e.876f88",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 490,
        "y": 180,
        "wires": [
            [
                "46f4751b.1d84fc"
            ]
        ]
    },
    {
        "id": "e60caf73.30a49",
        "type": "switch",
        "z": "cfb8073e.876f88",
        "name": "",
        "property": "delay",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "50",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "9ccfb807.631b88"
            ],
            [
                "9d0384ee.324008"
            ],
            [
                "893055ff.24d938"
            ]
        ]
    },
    {
        "id": "893055ff.24d938",
        "type": "delay",
        "z": "cfb8073e.876f88",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "46f4751b.1d84fc"
            ]
        ]
    },
    {
        "id": "9ccfb807.631b88",
        "type": "delay",
        "z": "cfb8073e.876f88",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "46f4751b.1d84fc"
            ]
        ]
    },
    {
        "id": "64054c5b.abfa84",
        "type": "exec",
        "z": "a548685b.826b08",
        "command": "/data/projects/nodered/octoprint-disconnect.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Disconnect from octoprint",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "9ffb063b.ede2e8"
            ],
            [],
            []
        ]
    },
    {
        "id": "9ffb063b.ede2e8",
        "type": "delay",
        "z": "a548685b.826b08",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 600,
        "y": 80,
        "wires": [
            [
                "22ed97ee.faead8"
            ]
        ]
    },
    {
        "id": "22ed97ee.faead8",
        "type": "api-call-service",
        "z": "a548685b.826b08",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_off",
        "entityId": "switch.3d_printer",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 790,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "1025cd35.a899e3",
        "type": "api-current-state",
        "z": "a548685b.826b08",
        "name": "Printer on",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.3d_printer",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "64054c5b.abfa84"
            ],
            []
        ]
    },
    {
        "id": "cfbda5ba.dea498",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "4 AM everyday ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 04 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "ab8b3103.2ad76"
            ]
        ]
    },
    {
        "id": "795b7b3e.e3f064",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Start vacuum",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "vacuum",
        "service": "start",
        "entityId": "vacuum.valetudo_roborock",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 510,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f2f183f9.0381c",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Run vacumm every morning",
        "info": "",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "3e215458.36073c",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Vacuum error",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "vacuum.valetudo_roborock",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "error",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 240,
        "wires": [
            [
                "d46beef9.4f088"
            ],
            []
        ]
    },
    {
        "id": "35e31cc.f48d0e4",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 480,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c10ad374.4a6cd",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "USPS Delivered",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.mail_usps_delivered",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "0",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 740,
        "wires": [
            [
                "b60867ef.dba148"
            ],
            []
        ]
    },
    {
        "id": "4257a54c.c5696c",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "UPS Delivered",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.mail_ups_delivered",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "0",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 800,
        "wires": [
            [
                "230417ea.7965a8"
            ],
            []
        ]
    },
    {
        "id": "7a0839f3.3014a8",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Fedex Delivered",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.mail_fedex_delivered",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "0",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 860,
        "wires": [
            [
                "b43bd907.3ae248"
            ],
            []
        ]
    },
    {
        "id": "601b8ab1.27f8e4",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 720,
        "y": 840,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b60867ef.dba148",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"count\": $$.data.new_state.state - $$.data.old_state.state, \"carrier\": \"USPS\" }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 740,
        "wires": [
            [
                "ec5c4d8e.e2185"
            ]
        ]
    },
    {
        "id": "230417ea.7965a8",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"count\": $$.data.new_state.state - $$.data.old_state.state, \"carrier\": \"UPS\" }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 800,
        "wires": [
            [
                "ec5c4d8e.e2185"
            ]
        ]
    },
    {
        "id": "b43bd907.3ae248",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"count\": $$.data.new_state.state - $$.data.old_state.state, \"carrier\": \"Fedex\" }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 860,
        "wires": [
            [
                "ec5c4d8e.e2185"
            ]
        ]
    },
    {
        "id": "257351ca.c2b3be",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "New package(s) delivered",
        "info": "",
        "x": 150,
        "y": 700,
        "wires": []
    },
    {
        "id": "68cc1ff9.b3b1e",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "USPS Mail Coming Today",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.mail_usps_mail",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "0",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 980,
        "wires": [
            [
                "34239bb9.636774"
            ],
            []
        ]
    },
    {
        "id": "15739cae.559ee3",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 560,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7434d2eb.da0c3c",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Amazon Delivered",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.mail_amazon_packages_delivered",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "0",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 920,
        "wires": [
            [
                "91d7fb52.d922d8"
            ],
            []
        ]
    },
    {
        "id": "91d7fb52.d922d8",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"count\": $$.data.new_state.state - $$.data.old_state.state, \"carrier\": \"Amazon\" }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "ec5c4d8e.e2185"
            ]
        ]
    },
    {
        "id": "ec5c4d8e.e2185",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "func": "return {\n    \"payload\": {\n        \"notification\":\n        {\n            \"title\":\"Mails & Packages\",\n            \"message\":`📦 ${msg.payload.count} New package(s) from ${msg.payload.carrier} delivered`,\n            \"data\": {\n                \"tag\":\"package.delivered\",\n                \"priority\":\"high\",\n                \"ttl\":0\n            }\n        },\n        \"log\": {\n            \"name\": msg.payload.carrier,\n            \"entity_id\": msg.data.entity_id,\n            \"message\":\"notified delivered\",\n            \"domain\":\"notify\"\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 840,
        "wires": [
            [
                "601b8ab1.27f8e4"
            ]
        ]
    },
    {
        "id": "d46beef9.4f088",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Roborock Vacuum\",\"message\":\"🧹️ ⚠️ Vacuum in error state\",\"data\":{\"tag\":\"vacuum.error\",\"priority\":\"high\",\"ttl\":0,\"actions\":[{\"title\":\"Find robot\",\"action\":\"notification.vacuum.roborock.find\"}]}},\"log\":{\"name\":\"Roborock (Node Red)\",\"entity_id\":\"vacuum.valetudo_roborock\",\"message\":\"notified error\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "35e31cc.f48d0e4"
            ]
        ]
    },
    {
        "id": "38ffe2f9.d41c8e",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Living Room Light On",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.living_room",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 1140,
        "wires": [
            [
                "850099cd.2a80e8"
            ],
            []
        ]
    },
    {
        "id": "850099cd.2a80e8",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "TV On",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "media_player.living_room_tv",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "f33e2978.d2d158"
            ],
            []
        ]
    },
    {
        "id": "557be09b.cd1a5",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "TV On",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player.living_room_tv",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 1260,
        "wires": [
            [
                "f33e2978.d2d158"
            ],
            []
        ]
    },
    {
        "id": "f33e2978.d2d158",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "After dark? (-1 hour offset)",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.after_dark_offset",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 500,
        "y": 1200,
        "wires": [
            [
                "36b728b3.a353a8"
            ],
            []
        ]
    },
    {
        "id": "d3b259b7.fccef8",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Set brightness",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "light",
        "service": "turn_on",
        "entityId": "light.living_room",
        "data": "$$.payload ? {\t   \"entity_id\":\"light.living_room\",\t   \"brightness_pct\": $$.payload\t} : { \"entity_id\":\"light.living_room\" }",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 640,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "8bf21445.4b9538",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Set dimmer according to sun position & TV state",
        "info": "",
        "x": 220,
        "y": 1080,
        "wires": []
    },
    {
        "id": "36b728b3.a353a8",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "Bightness 65",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "65",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1260,
        "wires": [
            [
                "d3b259b7.fccef8"
            ]
        ]
    },
    {
        "id": "7c62d47d.ecb98c",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "TV Off",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player.living_room_tv",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 1340,
        "wires": [
            [
                "75fc1d63.768cc4"
            ],
            []
        ]
    },
    {
        "id": "75fc1d63.768cc4",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "Living Room Light On",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "light.living_room",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 260,
        "y": 1340,
        "wires": [
            [
                "583192e7.17a02c"
            ],
            []
        ]
    },
    {
        "id": "583192e7.17a02c",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "Brightness 100",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "80",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1340,
        "wires": [
            [
                "d3b259b7.fccef8"
            ]
        ]
    },
    {
        "id": "e80845f5.8c8a68",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "After dark (-1 hour offset)",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.after_dark_offset",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 1200,
        "wires": [
            [
                "850099cd.2a80e8"
            ],
            []
        ]
    },
    {
        "id": "34239bb9.636774",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "func": "const states = global.get('homeassistant.homeAssistant.states');\nconst url = states[\"sensor.mail_image_url\"].state;\n\nreturn {\n    \"payload\": {\n    \"notification\": {\n        \"title\": \"Mails & Packages\",\n        \"message\": `✉️ ${msg.payload} New mail(s) coming today (around 1 PM)`,\n        \"data\": {\n            \"tag\": \"mail.coming\",\n            \"image\": url\n        }\n    },\n    \"log\": {\n        \"name\": `USPS (${msg.payload})`,\n        \"entity_id\": \"sensor.mail_usps_mail\",\n        \"message\": \"notified coming today\",\n        \"domain\": \"notify\"\n    }\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 980,
        "wires": [
            [
                "15739cae.559ee3"
            ]
        ]
    },
    {
        "id": "c8e0447.3916eb8",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Master Bedroom Light On",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.master_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 1420,
        "wires": [
            [
                "71c04cd.e7fc9b4"
            ],
            []
        ]
    },
    {
        "id": "d1b99c80.7fc79",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Set brightness 40",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "light",
        "service": "turn_on",
        "entityId": "light.master_bedroom",
        "data": "{\"entity_id\":\"light.master_bedroom\",\"brightness_pct\":40}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 650,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "71c04cd.e7fc9b4",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "After 11 PM or before 5 AM?",
        "func": "const now = new Date();\nlet cutoff = new Date();\ncutoff.setHours(23);\ncutoff.setMinutes(0);\ncutoff.setSeconds(0);\ncutoff.setMilliseconds(0);\n\nlet cutoffMorning = new Date();\ncutoffMorning.setHours(5);\ncutoffMorning.setMinutes(0);\ncutoffMorning.setSeconds(0);\ncutoffMorning.setMilliseconds(0);\n\n\nif (now > cutoff || now < cutoffMorning) {\n    return [{ payload: true }, null]\n}\n\nreturn [null, { payload: true }];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1420,
        "wires": [
            [
                "d1b99c80.7fc79"
            ],
            [
                "c215c268.d4dbd"
            ]
        ]
    },
    {
        "id": "86849de1.7c9e3",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "10:30 PM weekday ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 22 * * 1,2,3,4,0",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1980,
        "wires": [
            [
                "c53610bc.f065d"
            ]
        ]
    },
    {
        "id": "36cbf9fa.832436",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Start humidifier",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_on",
        "entityId": "switch.master_bedroom_humidifier",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 720,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "44d80759.960018",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Humidifier",
        "info": "",
        "x": 100,
        "y": 1940,
        "wires": []
    },
    {
        "id": "d77576d6.333c78",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "11:30 PM weekend",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 23 * * 5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2040,
        "wires": [
            [
                "c53610bc.f065d"
            ]
        ]
    },
    {
        "id": "b208104b.c619c",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "8:30 AM weekday ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 08 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 2100,
        "wires": [
            [
                "39525052.942af"
            ]
        ]
    },
    {
        "id": "39525052.942af",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Stop humidifier",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_off",
        "entityId": "switch.master_bedroom_humidifier",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 360,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "4a204f83.aa742",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "9:30 AM weekend",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 09 * * 6,0",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 2160,
        "wires": [
            [
                "39525052.942af"
            ]
        ]
    },
    {
        "id": "9ef1f0da.1fa7e",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "11 PM",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1480,
        "wires": [
            [
                "1cb02712.9c9a59"
            ]
        ]
    },
    {
        "id": "1cb02712.9c9a59",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "Master Bedroom Light On",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "light.master_bedroom",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "d1b99c80.7fc79"
            ],
            []
        ]
    },
    {
        "id": "c215c268.d4dbd",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Set brightness 100",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "light",
        "service": "turn_on",
        "entityId": "light.master_bedroom",
        "data": "{\"entity_id\":\"light.master_bedroom\",\"brightness_pct\":100}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 650,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "2ea29c74.462574",
        "type": "trigger-state",
        "z": "d9fe96b5.8701c8",
        "name": "Winix turbo",
        "server": "3efaa203.1c443e",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "fan.winix_kitchen",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "property",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "turbo",
                "propertyValue": "new_state.attributes.speed"
            },
            {
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "property",
                "comparatorType": "is_not",
                "comparatorValueDatatype": "str",
                "comparatorValue": "turbo",
                "propertyValue": "old_state.attributes.speed"
            }
        ],
        "inputs": 1,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": true,
        "state_type": "str",
        "enableInput": true,
        "x": 90,
        "y": 2280,
        "wires": [
            [
                "51eb4fd.f6670b"
            ],
            []
        ]
    },
    {
        "id": "51eb4fd.f6670b",
        "type": "trigger",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 2280,
        "wires": [
            [
                "2dc9c39.e172d3c"
            ]
        ]
    },
    {
        "id": "df0907e7.efa2c8",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 2340,
        "wires": [
            [
                "51eb4fd.f6670b"
            ]
        ]
    },
    {
        "id": "2dc9c39.e172d3c",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Set to auto",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "fan",
        "service": "set_speed",
        "entityId": "fan.winix_847207372989",
        "data": "{\"entity_id\":\"fan.winix_847207372989\",\"speed\":\"auto\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 470,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "5324f899.7268c8",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Winix turn off turbo after 1 hour",
        "info": "",
        "x": 150,
        "y": 2240,
        "wires": []
    },
    {
        "id": "1787113f.bba83f",
        "type": "trigger-state",
        "z": "d9fe96b5.8701c8",
        "name": "Winix NOT turbo",
        "server": "3efaa203.1c443e",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "fan.winix_kitchen",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "property",
                "comparatorType": "is_not",
                "comparatorValueDatatype": "str",
                "comparatorValue": "turbo",
                "propertyValue": "new_state.attributes.speed"
            }
        ],
        "inputs": 1,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": true,
        "state_type": "str",
        "enableInput": true,
        "x": 100,
        "y": 2340,
        "wires": [
            [
                "df0907e7.efa2c8"
            ],
            []
        ]
    },
    {
        "id": "b853e4.ecccfc2",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "d": true,
        "name": "Modem on after 3 mins off",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.modem",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 2460,
        "wires": [
            [
                "92c686bc.e47f38"
            ],
            [
                "93f07550.984f18"
            ]
        ]
    },
    {
        "id": "93f07550.984f18",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 2520,
        "wires": [
            [
                "92c686bc.e47f38"
            ]
        ]
    },
    {
        "id": "92c686bc.e47f38",
        "type": "trigger",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 2460,
        "wires": [
            [
                "240f1e6a.5425f2"
            ]
        ]
    },
    {
        "id": "240f1e6a.5425f2",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Turn on",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_on",
        "entityId": "switch.modem",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 570,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "8ba4ecdd.03134",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Modem turn on after 3 mins off",
        "info": "",
        "x": 140,
        "y": 2420,
        "wires": []
    },
    {
        "id": "ab8b3103.2ad76",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "Not out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 300,
        "y": 80,
        "wires": [
            [
                "795b7b3e.e3f064"
            ],
            []
        ]
    },
    {
        "id": "f3cd1e52.b5b22",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "4 AM every other day ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 10 * * 1,3,5,0",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "33687b64.3c4b04"
            ]
        ]
    },
    {
        "id": "33687b64.3c4b04",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "Out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 330,
        "y": 180,
        "wires": [
            [
                "795b7b3e.e3f064"
            ],
            []
        ]
    },
    {
        "id": "c53610bc.f065d",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "Not out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 360,
        "y": 1980,
        "wires": [
            [
                "d17130ef.a4efd"
            ],
            []
        ]
    },
    {
        "id": "71199d0a.fc0974",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "IP address changed",
        "info": "",
        "x": 130,
        "y": 300,
        "wires": []
    },
    {
        "id": "1cbf598e.e52d86",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "IP address",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.ip_address",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "(\\d*)\\.(\\d*)\\.(\\d*)\\.(\\d*)\\b",
        "halt_if_type": "re",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 340,
        "wires": [
            [
                "2431aa94.0a7fd6",
                "66ca4295.a5723c"
            ],
            []
        ]
    },
    {
        "id": "2431aa94.0a7fd6",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "func": "return {\n    \"payload\": {\n        \"notification\": {\n            \"title\": \"IP address changed\",\n            \"message\": `🌐 ⚠️ Your IP address is now ${msg.payload}`,\n            \"data\": {\n                \"tag\": \"internet.ip.warn\",\n                \"priority\": \"high\",\n                \"ttl\": 0\n            }\n        },\n        \"log\": {\n            \"name\": \"IP address (Node Red)\",\n            \"entity_id\": \"sensor.ip_address\",\n            \"message\": \"notified changed\",\n            \"domain\": \"notify\"\n        }\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 340,
        "wires": [
            [
                "87de062.dda07f8"
            ]
        ]
    },
    {
        "id": "87de062.dda07f8",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 480,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "66ca4295.a5723c",
        "type": "exec",
        "z": "d9fe96b5.8701c8",
        "command": "/data/projects/nodered/update-ip.sh",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Run update-ip.sh",
        "x": 310,
        "y": 400,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f640e131.f8a82",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Media player paused",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player",
        "entityidfiltertype": "substring",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "paused",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 540,
        "wires": [
            [
                "8f336a3f.e3d058"
            ],
            [
                "339aca96.9f5f36"
            ]
        ]
    },
    {
        "id": "8f336a3f.e3d058",
        "type": "trigger",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "10",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "4ab8a7ec.d7f988"
            ]
        ]
    },
    {
        "id": "339aca96.9f5f36",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 600,
        "wires": [
            [
                "8f336a3f.e3d058"
            ]
        ]
    },
    {
        "id": "4ab8a7ec.d7f988",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Turn off",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "media_player",
        "service": "turn_off",
        "entityId": "",
        "data": "{\"entity_id\":\"{{data.entity_id}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 540,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "bbe9df85.db331",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Turn off speaker after 10 mins paused",
        "info": "",
        "x": 190,
        "y": 500,
        "wires": []
    },
    {
        "id": "e82dd484.41e038",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Motion detected",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.front_person_motion",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 1660,
        "wires": [
            [
                "3261309c.84dbc"
            ],
            []
        ]
    },
    {
        "id": "3261309c.84dbc",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "func": "return {\n    \"payload\": {\n        \"notify_whom\": \"all_phone_app\",\n        \"notification\": {\n            \"title\": \"Front-door camera\",\n            \"message\": `🧍 Motion detected at front-door`,\n            \"data\": {\n                \"image\": \"/api/camera_proxy/camera.front_person\",\n                \"priority\": \"high\",\n                \"ttl\": 0,\n                \"url\": \"/lovelace-test/1\"\n            }\n        },\n        \"log\": {\n            \"name\": `Front-door camera`,\n            \"entity_id\": \"camera.front_door_camera\",\n            \"message\": \"notified motion\",\n            \"domain\": \"notify\"\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1660,
        "wires": [
            [
                "72abffd5.ba937"
            ]
        ]
    },
    {
        "id": "72abffd5.ba937",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 500,
        "y": 1660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bc06b0b9.b7238",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Front door camera",
        "info": "",
        "x": 130,
        "y": 1620,
        "wires": []
    },
    {
        "id": "d17130ef.a4efd",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "Humidity <= 40",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "40",
        "halt_if_type": "num",
        "halt_if_compare": "lte",
        "entity_id": "sensor.upstairs_thermostat_humidity",
        "state_type": "num",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 540,
        "y": 1980,
        "wires": [
            [
                "36cbf9fa.832436"
            ],
            []
        ]
    },
    {
        "id": "1088cf0.b862531",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Disk usage > 50%",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.disk_use_percent",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "50",
        "halt_if_type": "num",
        "halt_if_compare": "gte",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 1780,
        "wires": [
            [
                "41e870b1.1e9fb"
            ],
            [
                "6c72cb13.aa5594"
            ]
        ]
    },
    {
        "id": "e3817658.1ee658",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 840,
        "y": 1780,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e3db1fd.854f6e",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Turn on warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.disk_usage_warning",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 510,
        "y": 1780,
        "wires": [
            [
                "d17c23b2.6933d"
            ]
        ]
    },
    {
        "id": "41e870b1.1e9fb",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "Warning off",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.disk_usage_warning",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 330,
        "y": 1780,
        "wires": [
            [
                "e3db1fd.854f6e"
            ],
            []
        ]
    },
    {
        "id": "6c72cb13.aa5594",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Turn off warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.disk_usage_warning",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 340,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "2865cd81.629c32",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Server disk usage warning",
        "info": "",
        "x": 150,
        "y": 1740,
        "wires": []
    },
    {
        "id": "d17c23b2.6933d",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "func": "return {\n    \"notification\": {\n        \"title\": \"Server Disk Usage\",\n        \"message\": \"⚠️ Server disk usage > 50%\",\n        \"data\": {\n            \"tag\": \"server.disk_usage.warn\",\n            \"priority\": \"high\",\n            \"ttl\": 0\n        }\n    },\n    \"log\": {\n        \"name\": \"Server disk usage (Node Red)\",\n        \"entity_id\": \"sensor.disk_use_percent\",\n        \"message\": \"notified > 50%\",\n        \"domain\": \"notify\"\n    },\n    \"notify_whom\": 'm_only'\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1780,
        "wires": [
            [
                "e3817658.1ee658"
            ]
        ]
    },
    {
        "id": "fa2a4a9ee3eea89e",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "5 AM weekend",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 05 * * 6,0",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "ab8b3103.2ad76"
            ]
        ]
    },
    {
        "id": "fdce928abba6b5cf",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Water leak",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.water_leak_sensor",
        "entityidfiltertype": "substring",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 80,
        "y": 2640,
        "wires": [
            [
                "fe505c232dac2acc",
                "4fc2d24cd846ec85"
            ],
            []
        ]
    },
    {
        "id": "5351078cd69f6a5b",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "func": "const data = msg.data;\nconst attrs = data.new_state.attributes;\nreturn {\n    \"payload\": {\n    \"notification\": {\n        \"title\": \"⚠️ 🌊 Water leak\",\n        \"message\": `${attrs.friendly_name} reports leak!`,\n        \"data\": {\n            \"priority\": \"high\",\n            \"ttl\": 0,\n            \"persistent\": true,\n            \"tag\": `water_leak.${data.entity_id}`,\n        }\n    },\n    \"log\": {\n        \"name\": `${attrs.friendly_name}`,\n        \"entity_id\": `${data.entity_id}`,\n        \"message\": \"notified leak\",\n        \"domain\": \"notify\"\n    },\n    \"notify_whom\": 'all_phone_app'\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2640,
        "wires": [
            [
                "327398d29a86664e"
            ]
        ]
    },
    {
        "id": "fe505c232dac2acc",
        "type": "split",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 230,
        "y": 2640,
        "wires": [
            [
                "5351078cd69f6a5b"
            ]
        ]
    },
    {
        "id": "327398d29a86664e",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "x": 560,
        "y": 2640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4fc2d24cd846ec85",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Announce leak",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "tts",
        "service": "google_translate_say",
        "entityId": "",
        "data": "{\"entity_id\":\"media_player.all_google_media_players\",\"message\":\"Water leak detected! Check your phone to know where\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 260,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "e95f502cad4e4b80",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Water leak detection",
        "info": "",
        "x": 110,
        "y": 2600,
        "wires": []
    },
    {
        "id": "a6507da91b68d5e2",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Guest Bathroom Fan On",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.guest_bathroom_fan",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 1540,
        "wires": [
            [
                "c1a79280a9445fb8"
            ],
            [
                "962114bbf6d42113"
            ]
        ]
    },
    {
        "id": "962114bbf6d42113",
        "type": "change",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1600,
        "wires": [
            [
                "c1a79280a9445fb8"
            ]
        ]
    },
    {
        "id": "c1a79280a9445fb8",
        "type": "trigger",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "20",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 1540,
        "wires": [
            [
                "cc02f77313774905"
            ]
        ]
    },
    {
        "id": "cc02f77313774905",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Turn off fan",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_off",
        "entityId": "switch.guest_bathroom_fan",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 630,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "17b2e121e76480a7",
        "type": "inject",
        "z": "d9fe96b5.8701c8",
        "name": "Everyday 12 AM Sat",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * 6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3100,
        "wires": [
            [
                "13c881c0347b58b3"
            ]
        ]
    },
    {
        "id": "13c881c0347b58b3",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Backup",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "backup",
        "service": "create",
        "entityId": "",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 380,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "85ebed91dc418af8",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "PM25",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.particulate_matter_2_5um_concentration",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "40",
        "halt_if_type": "num",
        "halt_if_compare": "gte",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 70,
        "y": 2840,
        "wires": [
            [
                "274ea14ea70bf961",
                "651a3373e20fb5d6"
            ],
            []
        ]
    },
    {
        "id": "274ea14ea70bf961",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "func": "const data = msg.data;\nconst attrs = data.new_state.attributes;\nreturn {\n    \"payload\": {\n    \"notification\": {\n        \"title\": \"⚠️💨 Air quality\",\n        \"message\": `You should crack open a window!`,\n        \"data\": {\n            \"priority\": \"high\",\n            \"ttl\": 0,\n            \"persistent\": true,\n            \"tag\": `air_quality.warn`,\n        }\n    },\n    \"log\": {\n        \"name\": `${attrs.friendly_name}`,\n        \"entity_id\": `${data.entity_id}`,\n        \"message\": \"notified air quality\",\n        \"domain\": \"notify\"\n    },\n    \"notify_whom\": 'all_phone_app'\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 2840,
        "wires": [
            [
                "758b5d55de7a1538"
            ]
        ]
    },
    {
        "id": "758b5d55de7a1538",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "x": 420,
        "y": 2840,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d6057cdca2fd74bd",
        "type": "comment",
        "z": "d9fe96b5.8701c8",
        "name": "Air warning",
        "info": "",
        "x": 80,
        "y": 2800,
        "wires": []
    },
    {
        "id": "651a3373e20fb5d6",
        "type": "api-call-service",
        "z": "d9fe96b5.8701c8",
        "name": "Announce air quality",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "tts",
        "service": "google_translate_say",
        "entityId": "",
        "data": "{\"entity_id\":\"media_player.kitchen_display\",\"message\":\"Poor air quality! You should crack open a window!\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 280,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "7f61492ffe7f8e13",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "PM25",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.particulate_matter_2_5um_concentration",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "40",
        "halt_if_type": "num",
        "halt_if_compare": "lt",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 70,
        "y": 2960,
        "wires": [
            [
                "4f44625fbcaffe01"
            ],
            []
        ]
    },
    {
        "id": "4f44625fbcaffe01",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "clear notification",
        "func": "const data = msg.data;\nconst attrs = data.new_state.attributes;\nconst clear = {\n    \"notification\": {\n        \"title\": \"clear_notification\",\n        \"message\": \"clear_notification\",\n        \"data\": {\n            \"tag\": \"air_quality.warn\"\n        }\n    }\n\n}\n\nif (parseInt(data.old_state.state) >= 40 && parseInt(data.new_state.state < 40)) {\n    return [clear, null];\n} else {\n    return [null, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 2960,
        "wires": [
            [
                "5f4f41758fb8103a"
            ],
            []
        ]
    },
    {
        "id": "5f4f41758fb8103a",
        "type": "subflow:670bc302.cb732c",
        "z": "d9fe96b5.8701c8",
        "name": "",
        "x": 540,
        "y": 2960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e5eca9e0786025a2",
        "type": "server-state-changed",
        "z": "d9fe96b5.8701c8",
        "name": "Window open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.window_sensor",
        "entityidfiltertype": "substring",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 3020,
        "wires": [
            [
                "2d6afc66f0db56df"
            ],
            []
        ]
    },
    {
        "id": "a8a5d540facf4bcd",
        "type": "function",
        "z": "d9fe96b5.8701c8",
        "name": "clear notification",
        "func": "const data = msg.data;\nconst attrs = data.new_state.attributes;\nreturn {\n    \"notification\": {\n        \"title\": \"clear_notification\",\n        \"message\": \"clear_notification\",\n        \"data\": {\n            \"tag\": \"air_quality.warn\"\n        }\n    }\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 3020,
        "wires": [
            [
                "5f4f41758fb8103a"
            ],
            []
        ]
    },
    {
        "id": "2d6afc66f0db56df",
        "type": "api-current-state",
        "z": "d9fe96b5.8701c8",
        "name": "bad air quality",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "40",
        "halt_if_type": "num",
        "halt_if_compare": "gte",
        "entity_id": "sensor.particulate_matter_2_5um_concentration",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 280,
        "y": 3020,
        "wires": [
            [
                "a8a5d540facf4bcd"
            ],
            []
        ]
    },
    {
        "id": "8e9ead73.ad817",
        "type": "server-state-changed",
        "z": "6054ff63.2ff7c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.3d_printer",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 80,
        "wires": [
            [
                "a1d8209b.2dfc4"
            ],
            [
                "4a77f124.d5bce"
            ]
        ]
    },
    {
        "id": "461d97a6.418758",
        "type": "exec",
        "z": "6054ff63.2ff7c",
        "command": "/data/projects/nodered/octoprint-connect.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Connect to octoprint",
        "x": 720,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a1d8209b.2dfc4",
        "type": "trigger",
        "z": "6054ff63.2ff7c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 80,
        "wires": [
            [
                "461d97a6.418758"
            ]
        ]
    },
    {
        "id": "4a77f124.d5bce",
        "type": "change",
        "z": "6054ff63.2ff7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "a1d8209b.2dfc4"
            ]
        ]
    },
    {
        "id": "39b04469.c571ac",
        "type": "comment",
        "z": "6054ff63.2ff7c",
        "name": "Connect to octoprint when 3d printer is on",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "2d498c0.184bc74",
        "type": "trigger-state",
        "z": "6054ff63.2ff7c",
        "name": "Done printing",
        "server": "3efaa203.1c443e",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "binary_sensor.octoprint_printing",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "id": "b82zr38ny3",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "off"
            },
            {
                "id": "7s53wzyl8e5",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "previous_state",
                "propertyValue": "old_state.state",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "on"
            }
        ],
        "inputs": 1,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": false,
        "state_type": "str",
        "enableInput": true,
        "x": 90,
        "y": 500,
        "wires": [
            [
                "95da3bcb.58b1e8"
            ],
            []
        ]
    },
    {
        "id": "95da3bcb.58b1e8",
        "type": "trigger",
        "z": "6054ff63.2ff7c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "15",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 290,
        "y": 500,
        "wires": [
            [
                "f3e25e1e.08619"
            ]
        ]
    },
    {
        "id": "43815edd.632ac",
        "type": "server-state-changed",
        "z": "6054ff63.2ff7c",
        "name": "Printing",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.octoprint_printing",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 70,
        "y": 560,
        "wires": [
            [
                "248bef3f.a6e4b"
            ],
            [
                "e49e4eb4.72f9c"
            ]
        ]
    },
    {
        "id": "248bef3f.a6e4b",
        "type": "change",
        "z": "6054ff63.2ff7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 560,
        "wires": [
            [
                "95da3bcb.58b1e8",
                "8febd819.5290f8",
                "4c09e4df.d591ec",
                "cbb5ed65.7e3d5"
            ]
        ]
    },
    {
        "id": "8febd819.5290f8",
        "type": "trigger",
        "z": "6054ff63.2ff7c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "45",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 270,
        "y": 640,
        "wires": [
            [
                "4207c08.fdf084"
            ]
        ]
    },
    {
        "id": "6f558ee4.2251e",
        "type": "comment",
        "z": "6054ff63.2ff7c",
        "name": "Shutdown printer ",
        "info": "",
        "x": 100,
        "y": 400,
        "wires": []
    },
    {
        "id": "e49e4eb4.72f9c",
        "type": "api-current-state",
        "z": "6054ff63.2ff7c",
        "name": "Printer on",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.3d_printer",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 80,
        "y": 640,
        "wires": [
            [
                "8febd819.5290f8"
            ],
            []
        ]
    },
    {
        "id": "e2b2350d.9a80a8",
        "type": "server-state-changed",
        "z": "6054ff63.2ff7c",
        "name": "Printer off",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.3d_printer",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 80,
        "y": 720,
        "wires": [
            [
                "8c8a2241.1e095"
            ],
            []
        ]
    },
    {
        "id": "8c8a2241.1e095",
        "type": "change",
        "z": "6054ff63.2ff7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 720,
        "wires": [
            [
                "8febd819.5290f8",
                "95da3bcb.58b1e8",
                "4c09e4df.d591ec"
            ]
        ]
    },
    {
        "id": "a5270c33.37e9e",
        "type": "subflow:670bc302.cb732c",
        "z": "6054ff63.2ff7c",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 600,
        "y": 300,
        "wires": [
            [
                "cbb5ed65.7e3d5"
            ],
            []
        ]
    },
    {
        "id": "c86edb26.d10428",
        "type": "change",
        "z": "6054ff63.2ff7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Print completed!\",\"message\":\"Print completed!\",\"data\":{\"tag\":\"print.completed\",\"image\":\"/api/camera_proxy/camera.voxelab_aquila_stream\",\"priority\":\"high\",\"ttl\":0,\"actions\":[{\"title\":\"Turn printer off\",\"action\":\"notification.3d_printer.turn_off\"}]}},\"log\":{\"name\":\"3D print completed\",\"entity_id\":\"binary_sensor.octoprint_printing\",\"message\":\"notified done\",\"domain\":\"notify\"},\"notify_whom\":\"m_only\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 300,
        "wires": [
            [
                "a5270c33.37e9e"
            ]
        ]
    },
    {
        "id": "4207c08.fdf084",
        "type": "api-current-state",
        "z": "6054ff63.2ff7c",
        "name": "Printer on",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "switch.3d_printer",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 440,
        "y": 640,
        "wires": [
            [
                "f3e25e1e.08619"
            ],
            []
        ]
    },
    {
        "id": "a1946e96.8163",
        "type": "server-state-changed",
        "z": "6054ff63.2ff7c",
        "name": "Finishing print",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.octoprint_print_status",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "Finishing",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 300,
        "wires": [
            [
                "3c52ed2c.e6a632"
            ],
            []
        ]
    },
    {
        "id": "7283a745.ba3e18",
        "type": "subflow:670bc302.cb732c",
        "z": "6054ff63.2ff7c",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 800,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "92e82a65.c8c558",
        "type": "change",
        "z": "6054ff63.2ff7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Print ready!\",\"message\":\"Print should be ready to take off bed\"},\"log\":{\"name\":\"3D print completed\",\"entity_id\":\"binary_sensor.octoprint_printing\",\"message\":\"notified ready to take off bed\",\"domain\":\"notify\"},\"notify_whom\":\"m_only\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "7283a745.ba3e18"
            ]
        ]
    },
    {
        "id": "cbb5ed65.7e3d5",
        "type": "delay",
        "z": "6054ff63.2ff7c",
        "name": "Wait 25 minutes",
        "pauseType": "delay",
        "timeout": "25",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 800,
        "y": 300,
        "wires": [
            [
                "92e82a65.c8c558"
            ]
        ]
    },
    {
        "id": "f3e25e1e.08619",
        "type": "subflow:a548685b.826b08",
        "z": "6054ff63.2ff7c",
        "name": "",
        "env": [],
        "x": 660,
        "y": 500,
        "wires": []
    },
    {
        "id": "9d2dfff0.cb305",
        "type": "trigger-state",
        "z": "6054ff63.2ff7c",
        "name": "Almost done printing",
        "server": "3efaa203.1c443e",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "sensor.octoprint_print_progress",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "id": "vql8koe64wg",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "property",
                "propertyValue": "new_state.attributes.printTimeLeft",
                "comparatorType": "<=",
                "comparatorValueDatatype": "num",
                "comparatorValue": "30"
            },
            {
                "id": "p1h0bg5onbi",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "property",
                "propertyValue": "old_state.attributes.printTimeLeft",
                "comparatorType": ">",
                "comparatorValueDatatype": "num",
                "comparatorValue": "0"
            }
        ],
        "inputs": 1,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": false,
        "state_type": "str",
        "enableInput": true,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "3c52ed2c.e6a632",
                "266706bb.bf61da"
            ],
            []
        ]
    },
    {
        "id": "3c52ed2c.e6a632",
        "type": "delay",
        "z": "6054ff63.2ff7c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "c86edb26.d10428"
            ]
        ]
    },
    {
        "id": "45e539a5.a19618",
        "type": "comment",
        "z": "6054ff63.2ff7c",
        "name": "Notification when done",
        "info": "",
        "x": 120,
        "y": 200,
        "wires": []
    },
    {
        "id": "34af4b60.828664",
        "type": "server-events",
        "z": "6054ff63.2ff7c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 1,
        "event_type": "mobile_app_notification_action",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 170,
        "y": 440,
        "wires": [
            [
                "36a3b097.05ed7"
            ]
        ]
    },
    {
        "id": "36a3b097.05ed7",
        "type": "switch",
        "z": "6054ff63.2ff7c",
        "name": "",
        "property": "payload.event.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "notification.3d_printer.turn_off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "4c09e4df.d591ec"
            ]
        ]
    },
    {
        "id": "4c09e4df.d591ec",
        "type": "trigger",
        "z": "6054ff63.2ff7c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "f3e25e1e.08619"
            ]
        ]
    },
    {
        "id": "266706bb.bf61da",
        "type": "debug",
        "z": "6054ff63.2ff7c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 200,
        "wires": []
    },
    {
        "id": "efb55ae2.143df8",
        "type": "inject",
        "z": "6054ff63.2ff7c",
        "name": "Every 30 mins",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 800,
        "wires": [
            [
                "60f01.df38a0ff4"
            ]
        ]
    },
    {
        "id": "60f01.df38a0ff4",
        "type": "api-current-state",
        "z": "6054ff63.2ff7c",
        "name": "Printing",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "binary_sensor.octoprint_printing",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 310,
        "y": 800,
        "wires": [
            [
                "9ce72c24.11cec"
            ],
            []
        ]
    },
    {
        "id": "9ce72c24.11cec",
        "type": "change",
        "z": "6054ff63.2ff7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Printing\",\"message\":\"Still printing!\",\"data\":{\"tag\":\"print.snapshot\",\"image\":\"/api/camera_proxy/camera.voxelab_aquila_stream\"}},\"notify_whom\":\"m_only\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 800,
        "wires": [
            [
                "ea5d557a.60edc8"
            ]
        ]
    },
    {
        "id": "ea5d557a.60edc8",
        "type": "subflow:670bc302.cb732c",
        "z": "6054ff63.2ff7c",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 680,
        "y": 800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "52fdf50c.39204c",
        "type": "server-state-changed",
        "z": "6054ff63.2ff7c",
        "name": "Camera toggle",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.octoprint_camera",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 900,
        "wires": [
            [
                "a5b1a1e5.314a7"
            ],
            [
                "5fc7f4b5.ad73bc"
            ]
        ]
    },
    {
        "id": "9724333c.78381",
        "type": "exec",
        "z": "6054ff63.2ff7c",
        "command": "/data/projects/nodered/octoprint-streamon.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Turn on camera",
        "x": 800,
        "y": 900,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "17f4a99f.7e0e06",
        "type": "exec",
        "z": "6054ff63.2ff7c",
        "command": "/data/projects/nodered/octoprint-streamoff.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Turn off camera",
        "x": 460,
        "y": 980,
        "wires": [
            [
                "d66d119d.e4e7d"
            ],
            [],
            []
        ]
    },
    {
        "id": "d66d119d.e4e7d",
        "type": "subflow:a548685b.826b08",
        "z": "6054ff63.2ff7c",
        "name": "",
        "env": [],
        "x": 740,
        "y": 980,
        "wires": []
    },
    {
        "id": "54a5564.c76f6a8",
        "type": "api-call-service",
        "z": "6054ff63.2ff7c",
        "name": "Turn on printer",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_on",
        "entityId": "switch.3d_printer",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 900,
        "wires": [
            [
                "51428a41.750724"
            ]
        ]
    },
    {
        "id": "5fc7f4b5.ad73bc",
        "type": "api-current-state",
        "z": "6054ff63.2ff7c",
        "name": "Out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 270,
        "y": 980,
        "wires": [
            [
                "17f4a99f.7e0e06"
            ],
            []
        ]
    },
    {
        "id": "a5b1a1e5.314a7",
        "type": "api-current-state",
        "z": "6054ff63.2ff7c",
        "name": "Out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 290,
        "y": 900,
        "wires": [
            [
                "54a5564.c76f6a8"
            ],
            []
        ]
    },
    {
        "id": "51428a41.750724",
        "type": "delay",
        "z": "6054ff63.2ff7c",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 640,
        "y": 900,
        "wires": [
            [
                "9724333c.78381"
            ]
        ]
    },
    {
        "id": "8d434d29.85a88",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Set noctis theme",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "frontend",
        "service": "set_theme",
        "entityId": "",
        "data": "{\"name\":\"noctis\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 290,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ddad8919.724b68",
        "type": "server-events",
        "z": "9889ef6.6e2771",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 1,
        "event_type": "call_service",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 110,
        "y": 100,
        "wires": [
            [
                "901be019.50f94"
            ]
        ]
    },
    {
        "id": "e2f0473b.d22fe8",
        "type": "inject",
        "z": "9889ef6.6e2771",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "8d434d29.85a88"
            ]
        ]
    },
    {
        "id": "38735664.29c46a",
        "type": "server-state-changed",
        "z": "9889ef6.6e2771",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.cabinet_light",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 220,
        "y": 260,
        "wires": [
            [
                "6fc54a8c.45b3d4"
            ]
        ]
    },
    {
        "id": "ef9ac3fa.d4873",
        "type": "server-state-changed",
        "z": "9889ef6.6e2771",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.hallway_light",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 220,
        "y": 200,
        "wires": [
            [
                "2d5828c1.2bcb68"
            ]
        ]
    },
    {
        "id": "2d5828c1.2bcb68",
        "type": "subflow:cfb8073e.876f88",
        "z": "9889ef6.6e2771",
        "name": "Hallway Light",
        "env": [
            {
                "name": "entity_id",
                "value": "switch.hallway_light",
                "type": "str"
            },
            {
                "name": "interval",
                "value": "125",
                "type": "num"
            },
            {
                "name": "delay",
                "value": "100",
                "type": "num"
            }
        ],
        "x": 550,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6fc54a8c.45b3d4",
        "type": "subflow:cfb8073e.876f88",
        "z": "9889ef6.6e2771",
        "name": "Cabinet Light",
        "env": [
            {
                "name": "entity_id",
                "value": "switch.cabinet_light",
                "type": "str"
            },
            {
                "name": "delay",
                "value": "100",
                "type": "num"
            }
        ],
        "x": 550,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "901be019.50f94",
        "type": "change",
        "z": "9889ef6.6e2771",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "service",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "6fc54a8c.45b3d4",
                "2d5828c1.2bcb68",
                "35017f89f6625637"
            ]
        ]
    },
    {
        "id": "7ed0a368.46fdfc",
        "type": "server-events",
        "z": "9889ef6.6e2771",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 1,
        "event_type": "mobile_app_notification_action",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 170,
        "y": 420,
        "wires": [
            [
                "528e4bba.47c1d4"
            ]
        ]
    },
    {
        "id": "528e4bba.47c1d4",
        "type": "switch",
        "z": "9889ef6.6e2771",
        "name": "",
        "property": "payload.event.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "notification.vacuum.roborock.find",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notification.garage.open",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notification.garage.close",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notification.garage.disable_warning",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notification.washing_machine.open",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notification.humidifier.fill",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notification.3d_printer.turn_off",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 90,
        "y": 520,
        "wires": [
            [
                "35fcc3dc.e337cc"
            ],
            [
                "81988ba9.cf28c8"
            ],
            [
                "a8d42039.b7909"
            ],
            [
                "5bf3d2f0.95650c"
            ],
            [
                "34037e3f.897562"
            ],
            [
                "180816a3.09e219"
            ],
            []
        ]
    },
    {
        "id": "35fcc3dc.e337cc",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Find robot",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "vacuum",
        "service": "locate",
        "entityId": "vacuum.valetudo_roborock",
        "data": "{ \"entity_id\": \"vacuum.valetudo_roborock\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 320,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "81988ba9.cf28c8",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Open garage",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "cover",
        "service": "open_cover",
        "entityId": "cover.garage_door",
        "data": "{ \"entity_id\": \"cover.garage_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 330,
        "y": 560,
        "wires": [
            [
                "56466efe.bf5d5",
                "7d1bb907.95f578"
            ]
        ]
    },
    {
        "id": "a8d42039.b7909",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Close garage",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "cover",
        "service": "close_cover",
        "entityId": "cover.garage_door",
        "data": "{ \"entity_id\": \"cover.garage_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 330,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "56466efe.bf5d5",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Turn on light",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_on",
        "entityId": "switch.cabinet_light",
        "data": "{ \"entity_id\": \"switch.cabinet_light\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 530,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "7d1bb907.95f578",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Open back door",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "lock",
        "service": "unlock",
        "entityId": "lock.back_door",
        "data": "{ \"entity_id\": \"lock.back_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 540,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "34037e3f.897562",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Washing machine open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.washing_machine_open",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 370,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "180816a3.09e219",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Humidifier filled",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.humidifier_filled",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 340,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "5bf3d2f0.95650c",
        "type": "api-call-service",
        "z": "9889ef6.6e2771",
        "name": "Disable garage door warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.gargage_door_warning",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 380,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d0ae2f26.dae6d",
        "type": "comment",
        "z": "9889ef6.6e2771",
        "name": "Mobile actions",
        "info": "",
        "x": 90,
        "y": 380,
        "wires": []
    },
    {
        "id": "d7f1108edde3b9c8",
        "type": "server-state-changed",
        "z": "9889ef6.6e2771",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.guest_bathroom_fan",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 250,
        "y": 320,
        "wires": [
            [
                "35017f89f6625637"
            ]
        ]
    },
    {
        "id": "35017f89f6625637",
        "type": "subflow:cfb8073e.876f88",
        "z": "9889ef6.6e2771",
        "name": "Guest Bathroom Fan",
        "env": [
            {
                "name": "entity_id",
                "value": "switch.guest_bathroom_fan",
                "type": "str"
            },
            {
                "name": "delay",
                "value": "100",
                "type": "num"
            }
        ],
        "x": 580,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3ea02219.60e39e",
        "type": "inject",
        "z": "e2c67c6c.68265",
        "name": "8:30 AM Thursday",
        "props": [],
        "repeat": "",
        "crontab": "30 08 * * 4",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "56f91951.98d868"
            ]
        ]
    },
    {
        "id": "5cad1124.07924",
        "type": "subflow:670bc302.cb732c",
        "z": "e2c67c6c.68265",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 780,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "815f4d5.29d7fb",
        "type": "comment",
        "z": "e2c67c6c.68265",
        "name": "Reminder to take trash in/out",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "42be322c.cb3ccc",
        "type": "inject",
        "z": "e2c67c6c.68265",
        "name": "4 PM Thursday",
        "props": [],
        "repeat": "",
        "crontab": "00 16 * * 4",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "cb5928b9.8f9b78"
            ]
        ]
    },
    {
        "id": "a73fc1db.8105",
        "type": "subflow:670bc302.cb732c",
        "z": "e2c67c6c.68265",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 780,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e6e88d4e.59b0e",
        "type": "change",
        "z": "e2c67c6c.68265",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Trash day\",\"message\":\"🗑Don't forget to take the trash out!\",\"data\":{\"tag\":\"trash.reminder\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Trash day reminder\",\"message\":\"reminded to take trash out\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 100,
        "wires": [
            [
                "5cad1124.07924"
            ]
        ]
    },
    {
        "id": "e3a8c10d.9e079",
        "type": "change",
        "z": "e2c67c6c.68265",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"After trash day\",\"message\":\"🗑Don't forget to take the trash IN!\",\"data\":{\"tag\":\"trash.reminder\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Trash day reminder\",\"message\":\"reminded to take trash IN\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 160,
        "wires": [
            [
                "a73fc1db.8105"
            ]
        ]
    },
    {
        "id": "f083f14.47fa71",
        "type": "server-state-changed",
        "z": "e2c67c6c.68265",
        "name": "Internet Usage >= 1000 GB",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.internet_monthly",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "1000",
        "halt_if_type": "num",
        "halt_if_compare": "gte",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 280,
        "wires": [
            [
                "48c4e4a2.43e3bc"
            ],
            []
        ]
    },
    {
        "id": "48c4e4a2.43e3bc",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Not warned yet?",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.internet_usage_warned",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 400,
        "y": 280,
        "wires": [
            [
                "6e45d80e.63eab8",
                "d17016fc.c86768"
            ],
            []
        ]
    },
    {
        "id": "bb31d941.e17f28",
        "type": "subflow:670bc302.cb732c",
        "z": "e2c67c6c.68265",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 800,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6e45d80e.63eab8",
        "type": "change",
        "z": "e2c67c6c.68265",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Internet Usage\",\"message\":\"📶️ ⚠️ Internet usage near limit\",\"data\":{\"tag\":\"internet.usage.warn\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Internet Sensor (Node Red)\",\"entity_id\":\"sensor.internet_monthly\",\"message\":\"notified near limit\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "bb31d941.e17f28"
            ]
        ]
    },
    {
        "id": "568292bb.39d2ac",
        "type": "cronplus",
        "z": "e2c67c6c.68265",
        "name": "First day of month",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 0 1 * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 130,
        "y": 340,
        "wires": [
            [
                "e9af206b.6f4e2"
            ]
        ]
    },
    {
        "id": "e9af206b.6f4e2",
        "type": "api-call-service",
        "z": "e2c67c6c.68265",
        "name": "Turn off already warned",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.internet_usage_warned",
        "data": "{\"entity_id\":\"input_boolean.internet_usage_warned\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 370,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "d17016fc.c86768",
        "type": "api-call-service",
        "z": "e2c67c6c.68265",
        "name": "Turn on already warned",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.internet_usage_warned",
        "data": "{\"entity_id\":\"input_boolean.internet_usage_warned\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 650,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "fcb006ea.4c4138",
        "type": "comment",
        "z": "e2c67c6c.68265",
        "name": "Internet Usage Warning",
        "info": "",
        "x": 140,
        "y": 240,
        "wires": []
    },
    {
        "id": "56f91951.98d868",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Not out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "e6e88d4e.59b0e"
            ],
            []
        ]
    },
    {
        "id": "cb5928b9.8f9b78",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Not out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 340,
        "y": 160,
        "wires": [
            [
                "e3a8c10d.9e079"
            ],
            []
        ]
    },
    {
        "id": "c4e57a66.d47a08",
        "type": "inject",
        "z": "e2c67c6c.68265",
        "name": "Check washer open",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "d7f57d61.8acea"
            ]
        ]
    },
    {
        "id": "6c6d0c85.a031f4",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Washer closed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.washing_machine_open",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 480,
        "y": 500,
        "wires": [
            [
                "5bc1f973.cccf68"
            ],
            []
        ]
    },
    {
        "id": "8e38cc4d.d3a51",
        "type": "subflow:670bc302.cb732c",
        "z": "e2c67c6c.68265",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 840,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5bc1f973.cccf68",
        "type": "change",
        "z": "e2c67c6c.68265",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Washing machine is closed\",\"message\":\" ⚠️ Washing machine needs to be open!\",\"data\":{\"tag\":\"washing_machine.warn\",\"actions\":[{\"title\":\"Done\",\"action\":\"notification.washing_machine.open\"}]}},\"log\":{\"name\":\"Washing Machine (Node Red)\",\"entity_id\":\"input_boolean.washing_machine_open\",\"message\":\"notified closed warning\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 500,
        "wires": [
            [
                "8e38cc4d.d3a51"
            ]
        ]
    },
    {
        "id": "bed33bd.1ceb9c8",
        "type": "inject",
        "z": "e2c67c6c.68265",
        "name": "Check humidifier filled",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "79880a3e.261e84"
            ]
        ]
    },
    {
        "id": "1a70d695.9df7b9",
        "type": "subflow:670bc302.cb732c",
        "z": "e2c67c6c.68265",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 760,
        "y": 760,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8463d72c.7811b8",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Last filled",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_datetime.humidifier_filled",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 100,
        "y": 680,
        "wires": [
            [
                "1a3f1f09.3e6411"
            ]
        ]
    },
    {
        "id": "1a3f1f09.3e6411",
        "type": "function",
        "z": "e2c67c6c.68265",
        "name": "> 80 hours",
        "func": "const now = Date.now();\nconst lastFilled = new Date(msg.payload).getTime();\n// convert to hours\nconst duration = parseFloat(now - lastFilled) / (1000 * 60 * 60);\n\nif (duration > 80) {\n    return {\n        payload: true\n    };\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 680,
        "wires": [
            [
                "c44dc0e7.266c1",
                "b4a86946.5f9b88"
            ]
        ]
    },
    {
        "id": "2c2d4d65.b76782",
        "type": "server-state-changed",
        "z": "e2c67c6c.68265",
        "name": "Humidifier filled",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.humidifier_filled",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 820,
        "wires": [
            [
                "caa0a736.60a358",
                "b32cd353ed0a8d92"
            ],
            []
        ]
    },
    {
        "id": "7d986097.96bb9",
        "type": "api-call-service",
        "z": "e2c67c6c.68265",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_datetime",
        "service": "set_datetime",
        "entityId": "",
        "data": "{\"entity_id\":\"input_datetime.humidifier_filled\",\"datetime\":\"{{ payload }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 600,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "caa0a736.60a358",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Current time",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.date_time_iso",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "7d986097.96bb9"
            ]
        ]
    },
    {
        "id": "c44dc0e7.266c1",
        "type": "api-call-service",
        "z": "e2c67c6c.68265",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.humidifier_filled",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 600,
        "y": 680,
        "wires": [
            [
                "1a6b0551.e242fb"
            ]
        ]
    },
    {
        "id": "d3ef83ba.31d6d",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Humidifier not filed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.humidifier_filled",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 570,
        "y": 620,
        "wires": [
            [
                "b4a86946.5f9b88"
            ],
            []
        ]
    },
    {
        "id": "b4a86946.5f9b88",
        "type": "delay",
        "z": "e2c67c6c.68265",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 780,
        "y": 620,
        "wires": [
            [
                "1a6b0551.e242fb"
            ]
        ]
    },
    {
        "id": "79880a3e.261e84",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Not out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "d3ef83ba.31d6d",
                "8463d72c.7811b8"
            ],
            []
        ]
    },
    {
        "id": "7159cb79.824344",
        "type": "comment",
        "z": "e2c67c6c.68265",
        "name": "Washer",
        "info": "",
        "x": 90,
        "y": 460,
        "wires": []
    },
    {
        "id": "45a1b9c2.64a078",
        "type": "comment",
        "z": "e2c67c6c.68265",
        "name": "Humidifier",
        "info": "",
        "x": 100,
        "y": 580,
        "wires": []
    },
    {
        "id": "d7f57d61.8acea",
        "type": "api-current-state",
        "z": "e2c67c6c.68265",
        "name": "Not out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "6c6d0c85.a031f4"
            ],
            []
        ]
    },
    {
        "id": "1a6b0551.e242fb",
        "type": "change",
        "z": "e2c67c6c.68265",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Humidifier needs to be filled\",\"message\":\" ⚠️ Humidifier needs to be filled!\",\"data\":{\"tag\":\"humidifier.warn\",\"actions\":[{\"title\":\"Done\",\"action\":\"notification.humidifier.fill\"}]}},\"log\":{\"name\":\"Humidifier Filled (Node Red)\",\"entity_id\":\"input_boolean.humidifier_filled\",\"message\":\"notified not filled warning\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 680,
        "wires": [
            [
                "1a70d695.9df7b9"
            ]
        ]
    },
    {
        "id": "ccb0489c.623118",
        "type": "inject",
        "z": "e2c67c6c.68265",
        "name": "Check washer open",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 16 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "d7f57d61.8acea"
            ]
        ]
    },
    {
        "id": "2e65f50e728d8cb7",
        "type": "change",
        "z": "e2c67c6c.68265",
        "name": "Clear notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"washing_machine.warn\"}},\"log\":{\"name\":\"Washing Machine (Node Red) clear_notification\",\"entity_id\":\"input_boolean.washing_machine_open\",\"message\":\"cleared notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 440,
        "wires": [
            [
                "8e38cc4d.d3a51"
            ]
        ]
    },
    {
        "id": "c8d74a4a61beb0d5",
        "type": "server-state-changed",
        "z": "e2c67c6c.68265",
        "name": "Washer open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.washing_machine_open",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 470,
        "y": 440,
        "wires": [
            [
                "2e65f50e728d8cb7"
            ],
            []
        ]
    },
    {
        "id": "b32cd353ed0a8d92",
        "type": "change",
        "z": "e2c67c6c.68265",
        "name": "Clear notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"humidifier.warn\"}},\"log\":{\"name\":\"Humidifier Filled (Node Red) clear_notification\",\"entity_id\":\"input_boolean.humidifier_filled\",\"message\":\"cleared notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 760,
        "wires": [
            [
                "1a70d695.9df7b9"
            ]
        ]
    },
    {
        "id": "71ef36d546396a13",
        "type": "server-state-changed",
        "z": "e2c67c6c.68265",
        "name": "Battery",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "^sensor\\..*_battery",
        "entityidfiltertype": "regex",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 960,
        "wires": [
            [
                "15a09366081f3c50"
            ]
        ]
    },
    {
        "id": "15a09366081f3c50",
        "type": "function",
        "z": "e2c67c6c.68265",
        "name": "",
        "func": "const number = parseInt(msg.payload);\nconst data = msg.data;\nconst attrs = data.new_state.attributes;\n\n// ignore 0 since that means the device is actually plugged in\nconst low_battery = !isNaN(number) && number < 25 && number > 0;\n\nif (low_battery && !data.entity_id.includes(\"temperature\")) {\n    const notification = {\n        \"payload\": {\n            \"notification\": {\n                \"title\": \"⚠️ 🔋 Low battery\",\n                \"message\": `${attrs.friendly_name} has low battery (${number}%)!`,\n                \"data\": {\n                    \"priority\": \"high\",\n                    \"ttl\": 0,\n                    \"tag\": `low_battery.${data.entity_id}`,\n                }\n            },\n            \"log\": {\n                \"name\": `${attrs.friendly_name}`,\n                \"entity_id\": `${data.entity_id}`,\n                \"message\": \"notified low battery\",\n                \"domain\": \"notify\"\n            },\n            \"notify_whom\": 'all_phone_app'\n        }\n    };\n    return [notification, null]\n}\n\nreturn [null, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 960,
        "wires": [
            [
                "b4e1261f5cab0224"
            ],
            []
        ]
    },
    {
        "id": "e9164c6be7ccab14",
        "type": "comment",
        "z": "e2c67c6c.68265",
        "name": "Low battery",
        "info": "",
        "x": 110,
        "y": 920,
        "wires": []
    },
    {
        "id": "b4e1261f5cab0224",
        "type": "subflow:670bc302.cb732c",
        "z": "e2c67c6c.68265",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 460,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a9609c01.ce21b",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Garage door open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "cover.garage_door",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "open",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 60,
        "wires": [
            [
                "347b9f53.a8da"
            ],
            [
                "da9fa58a.72ff18"
            ]
        ]
    },
    {
        "id": "347b9f53.a8da",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Warning enabled",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.gargage_door_warning",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "9ac99fb8.a6ed"
            ],
            []
        ]
    },
    {
        "id": "c4a08510.ca05d8",
        "type": "trigger",
        "z": "7593ec4d.460434",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "-10",
        "extend": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 120,
        "wires": [
            [
                "3aa9a529.29ef6a"
            ]
        ]
    },
    {
        "id": "da9fa58a.72ff18",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "9ac99fb8.a6ed",
                "c4a08510.ca05d8"
            ]
        ]
    },
    {
        "id": "111871a0.bad0ae",
        "type": "subflow:670bc302.cb732c",
        "z": "7593ec4d.460434",
        "name": "",
        "x": 740,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "984dd037.9e4b4",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notify_whom\":\"all_phone_app\",\"notification\":{\"title\":\"Garage door\",\"message\":\" ⚠️ Garage door is open!\",\"data\":{\"tag\":\"garage_door.open\",\"priority\":\"high\",\"ttl\":0,\"actions\":[{\"title\":\"Close\",\"action\":\"notification.garage.close\"},{\"title\":\"Disable warning\",\"action\":\"notification.garage.disable_warning\"}]}},\"log\":{\"name\":\"Garage door (Node Red)\",\"entity_id\":\"cover.garage_door\",\"message\":\"notified is open\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 200,
        "wires": [
            [
                "111871a0.bad0ae"
            ]
        ]
    },
    {
        "id": "d86eb4ce.54d518",
        "type": "trigger-state",
        "z": "7593ec4d.460434",
        "name": "Get home",
        "server": "3efaa203.1c443e",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "sensor.minh_home",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "id": "josb7w1otd",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "True"
            },
            {
                "id": "bcqqpcgvs1",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "previous_state",
                "propertyValue": "old_state.state",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "False"
            }
        ],
        "inputs": 1,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": false,
        "state_type": "str",
        "enableInput": true,
        "x": 100,
        "y": 400,
        "wires": [
            [
                "e1b46cde.5dab5"
            ],
            []
        ]
    },
    {
        "id": "aaf19894.a381b8",
        "type": "trigger",
        "z": "7593ec4d.460434",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "10",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 400,
        "wires": [
            [
                "5685809b.c0085"
            ]
        ]
    },
    {
        "id": "e1b46cde.5dab5",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Disable garage warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.gargage_door_warning",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 330,
        "y": 400,
        "wires": [
            [
                "aaf19894.a381b8"
            ]
        ]
    },
    {
        "id": "5685809b.c0085",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Enable garage warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.gargage_door_warning",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 770,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3aa9a529.29ef6a",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Warning enabled",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.gargage_door_warning",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "e41223ca.c24a6"
            ],
            []
        ]
    },
    {
        "id": "9ac99fb8.a6ed",
        "type": "trigger",
        "z": "7593ec4d.460434",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "2",
        "extend": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 60,
        "wires": [
            [
                "c4a08510.ca05d8"
            ]
        ]
    },
    {
        "id": "2a40a77b.5a7148",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Enable garage warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.gargage_door_warning",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 200,
        "wires": [
            [
                "809e99b1.f2ba98"
            ],
            [
                "da9fa58a.72ff18"
            ]
        ]
    },
    {
        "id": "809e99b1.f2ba98",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Garage open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "open",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "cover.garage_door",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "9ac99fb8.a6ed"
            ],
            [
                "da9fa58a.72ff18"
            ]
        ]
    },
    {
        "id": "e41223ca.c24a6",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Garage open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "open",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "cover.garage_door",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 530,
        "y": 200,
        "wires": [
            [
                "984dd037.9e4b4"
            ],
            []
        ]
    },
    {
        "id": "b043ac1b.3f68a",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Garage door open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "cover.garage_door",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "open",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 500,
        "wires": [
            [
                "62325850.5356e8"
            ],
            []
        ]
    },
    {
        "id": "62325850.5356e8",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Sun set",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "below_horizon",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sun.sun",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 320,
        "y": 500,
        "wires": [
            [
                "6464d7fb.bb0678"
            ],
            []
        ]
    },
    {
        "id": "6464d7fb.bb0678",
        "type": "trigger",
        "z": "7593ec4d.460434",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "15",
        "extend": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 500,
        "wires": [
            [
                "9648c538.59c178"
            ]
        ]
    },
    {
        "id": "9648c538.59c178",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Close garage",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "cover",
        "service": "close_cover",
        "entityId": "cover.garage_door",
        "data": "{ \"entity_id\": \"cover.garage_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 670,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "2b48b11f.ca6a7e",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Disable garage warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.gargage_door_warning",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 580,
        "wires": [
            [
                "fa99b072.45622"
            ],
            [
                "24457bf.84a1d84"
            ]
        ]
    },
    {
        "id": "fa99b072.45622",
        "type": "trigger",
        "z": "7593ec4d.460434",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": true,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 370,
        "y": 580,
        "wires": [
            [
                "cd8b8ef3.f628d"
            ]
        ]
    },
    {
        "id": "cd8b8ef3.f628d",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Enable garage warning",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.gargage_door_warning",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 590,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "24457bf.84a1d84",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 90,
        "y": 640,
        "wires": [
            [
                "fa99b072.45622"
            ]
        ]
    },
    {
        "id": "bb915af7.11a448",
        "type": "trigger-state",
        "z": "7593ec4d.460434",
        "name": "Get home",
        "server": "3efaa203.1c443e",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "sensor.minh_home",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "id": "josb7w1otd",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "True"
            },
            {
                "id": "bcqqpcgvs1",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "previous_state",
                "propertyValue": "old_state.state",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "False"
            }
        ],
        "inputs": 1,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": false,
        "state_type": "str",
        "enableInput": true,
        "x": 100,
        "y": 860,
        "wires": [
            [
                "f5d444ad.1f8228"
            ],
            []
        ]
    },
    {
        "id": "a74bc448.ba6c08",
        "type": "subflow:670bc302.cb732c",
        "z": "7593ec4d.460434",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 540,
        "y": 800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5b0ed22c.3d17dc",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Home\",\"message\":\"Are you home?\",\"data\":{\"tag\":\"tracker.home\",\"priority\":\"high\",\"ttl\":0,\"actions\":[{\"title\":\"Open garage\",\"action\":\"notification.garage.open\"}]}},\"log\":{\"name\":\"Phone_M (Node Red)\",\"entity_id\":\"device_tracker.phone_m\",\"message\":\"notified getting home\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 800,
        "wires": [
            [
                "a74bc448.ba6c08"
            ]
        ]
    },
    {
        "id": "848bdc33.a57dd",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Auto open enabled",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.gargage_door_auto_open",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "937ce12.014472"
            ],
            [
                "5b0ed22c.3d17dc"
            ]
        ]
    },
    {
        "id": "ef87250c.b33c88",
        "type": "switch",
        "z": "7593ec4d.460434",
        "name": "Gone for >10 mins",
        "property": "custom.time_passed_minutes",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "10",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 740,
        "wires": [
            [
                "52e451ab.13e37"
            ],
            [
                "5b0ed22c.3d17dc"
            ]
        ]
    },
    {
        "id": "52748450.9cb55c",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Turn on light",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "switch",
        "service": "turn_on",
        "entityId": "switch.cabinet_light",
        "data": "{ \"entity_id\": \"switch.cabinet_light\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 990,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "7f0c2432.e86ddc",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Open back door",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "lock",
        "service": "unlock",
        "entityId": "lock.back_door",
        "data": "{ \"entity_id\": \"lock.back_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1000,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "3bb1ac2e.568434",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Open garage",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "cover",
        "service": "open_cover",
        "entityId": "cover.garage_door",
        "data": "{ \"entity_id\": \"cover.garage_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 990,
        "y": 740,
        "wires": [
            [
                "52748450.9cb55c",
                "7f0c2432.e86ddc",
                "c7b8b7d5.b46958"
            ]
        ]
    },
    {
        "id": "ea6ed80.8c7ec28",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Home\",\"message\":\"Welcome home! Gargage and back door have been unlocked.\",\"data\":{\"tag\":\"tracker.home.warning\",\"priority\":\"high\",\"ttl\":0,\"actions\":[{\"title\":\"Close garage\",\"action\":\"notification.garage.close\"}]}},\"log\":{\"name\":\"Minh Home (Node Red)\",\"entity_id\":\"sensor.minh_home\",\"message\":\"notified welcome home\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "92035a81.0a3688"
            ]
        ]
    },
    {
        "id": "92035a81.0a3688",
        "type": "subflow:670bc302.cb732c",
        "z": "7593ec4d.460434",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 840,
        "y": 900,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "52e451ab.13e37",
        "type": "function",
        "z": "7593ec4d.460434",
        "name": "Before 12 AM or after 11 AM?",
        "func": "const now = new Date();\nlet cutoff = new Date();\ncutoff.setHours(23);\ncutoff.setMinutes(59);\ncutoff.setSeconds(0);\ncutoff.setMilliseconds(0);\n\nlet cutoffMorning = new Date();\ncutoffMorning.setHours(11);\ncutoffMorning.setMinutes(0);\ncutoffMorning.setSeconds(0);\ncutoffMorning.setMilliseconds(0);\n\n\nif (now < cutoff || now > cutoffMorning) {\n    return [{ payload: true }, null]\n}\n\nreturn [null, { payload: true }];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 740,
        "wires": [
            [
                "3bb1ac2e.568434",
                "ea6ed80.8c7ec28"
            ],
            [
                "5b0ed22c.3d17dc"
            ]
        ]
    },
    {
        "id": "a1c016c8.f65298",
        "type": "subflow:670bc302.cb732c",
        "z": "7593ec4d.460434",
        "name": "",
        "env": [
            {
                "name": "notification",
                "value": "",
                "type": "json"
            },
            {
                "name": "log",
                "value": "",
                "type": "json"
            }
        ],
        "x": 700,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "35ff688c.a37368",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Home\",\"message\":\"Are you leaving?\",\"data\":{\"tag\":\"tracker.away\",\"priority\":\"high\",\"ttl\":0,\"actions\":[{\"title\":\"Close garage\",\"action\":\"notification.garage.close\"}]}},\"log\":{\"name\":\"Phone_M (Node Red)\",\"entity_id\":\"device_tracker.phone_m\",\"message\":\"notified leaving home\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 980,
        "wires": [
            [
                "a1c016c8.f65298"
            ]
        ]
    },
    {
        "id": "19e4fd1c.9dad93",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Lock back door",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "lock",
        "service": "lock",
        "entityId": "lock.back_door",
        "data": "{ \"entity_id\": \"lock.back_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 500,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "c7b8b7d5.b46958",
        "type": "trigger",
        "z": "7593ec4d.460434",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "15",
        "extend": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 810,
        "y": 680,
        "wires": [
            [
                "b03e44bd.d841c8"
            ]
        ]
    },
    {
        "id": "b03e44bd.d841c8",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Close garage",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "cover",
        "service": "close_cover",
        "entityId": "cover.garage_door",
        "data": "{ \"entity_id\": \"cover.garage_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 990,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "47178354.2fc07c",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Garage door closed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "cover.garage_door",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "closed",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 490,
        "y": 680,
        "wires": [
            [
                "246ee6a4.5ef8ba"
            ],
            []
        ]
    },
    {
        "id": "246ee6a4.5ef8ba",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 680,
        "wires": [
            [
                "c7b8b7d5.b46958"
            ]
        ]
    },
    {
        "id": "d84e8051.7cbaf",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Not locked",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "unlocked",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "lock.back_door",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 290,
        "y": 1040,
        "wires": [
            [
                "19e4fd1c.9dad93"
            ],
            []
        ]
    },
    {
        "id": "937ce12.014472",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Home status",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.minh_home",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "ef87250c.b33c88"
            ]
        ]
    },
    {
        "id": "f5d444ad.1f8228",
        "type": "function",
        "z": "7593ec4d.460434",
        "name": "Time passed",
        "func": "const after = new Date(msg.data.event.new_state.last_changed);\nconst before = new Date(msg.data.event.old_state.last_changed);\n\nmsg.custom = {\n    time_passed_minutes: (after - before) / 1000 / 60\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 110,
        "y": 800,
        "wires": [
            [
                "848bdc33.a57dd"
            ]
        ]
    },
    {
        "id": "83d1999c.6ec8e8",
        "type": "trigger-state",
        "z": "7593ec4d.460434",
        "name": "Leave home",
        "server": "3efaa203.1c443e",
        "version": 1,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "sensor.minh_home",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "id": "p685nuwsn7b",
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": "is",
                "comparatorValueDatatype": "str",
                "comparatorValue": "False"
            }
        ],
        "inputs": 1,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": false,
        "state_type": "str",
        "enableInput": true,
        "x": 110,
        "y": 980,
        "wires": [
            [
                "d84e8051.7cbaf",
                "60e0d70b857896c9"
            ],
            []
        ]
    },
    {
        "id": "8995a39a.1bcee",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.vacation_mode",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 1120,
        "wires": [
            [
                "107405ff.0ebd8a"
            ],
            [
                "76d180bc.102f6"
            ]
        ]
    },
    {
        "id": "107405ff.0ebd8a",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Disable auto open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.gargage_door_auto_open",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 310,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "76d180bc.102f6",
        "type": "api-call-service",
        "z": "7593ec4d.460434",
        "name": "Enable auto open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "input_boolean.gargage_door_auto_open",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 310,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "751e8480.66821c",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Garage door open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "cover.garage_door",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "open",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 1280,
        "wires": [
            [
                "9a3d6a53.d9e2f8"
            ],
            []
        ]
    },
    {
        "id": "9a3d6a53.d9e2f8",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 330,
        "y": 1280,
        "wires": [
            [
                "389c622b.2df77e"
            ],
            []
        ]
    },
    {
        "id": "e7e04f69.8c482",
        "type": "subflow:670bc302.cb732c",
        "z": "7593ec4d.460434",
        "name": "",
        "x": 600,
        "y": 1340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "389c622b.2df77e",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Garage door\",\"message\":\" ⚠️ Garage door is open!\",\"data\":{\"tag\":\"garage_door.open\",\"priority\":\"high\",\"ttl\":0,\"actions\":[{\"title\":\"Close\",\"action\":\"notification.garage.close\"},{\"title\":\"Disable warning\",\"action\":\"notification.garage.disable_warning\"}]}},\"log\":{\"name\":\"Garage door (Node Red)\",\"entity_id\":\"cover.garage_door\",\"message\":\"notified is open\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1280,
        "wires": [
            [
                "e7e04f69.8c482"
            ]
        ]
    },
    {
        "id": "f1738497f071e056",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Garage door closed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "cover.garage_door",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "closed",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "9b944e4f0f28dc6a"
            ],
            []
        ]
    },
    {
        "id": "9b944e4f0f28dc6a",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"garage_door.open\"}},\"log\":{\"name\":\"Garage door (Node Red) clear_notification\",\"entity_id\":\"cover.garage_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "111871a0.bad0ae"
            ]
        ]
    },
    {
        "id": "dda07f19f36c680e",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Garage door open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "cover.garage_door",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "open",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 1440,
        "wires": [
            [
                "cc758e714cade3d5"
            ],
            []
        ]
    },
    {
        "id": "cc758e714cade3d5",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"tracker.home\"}},\"log\":{\"name\":\"Garage door (Node Red) clear_notification\",\"entity_id\":\"cover.garage_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1400,
        "wires": [
            [
                "210f177e0e2d3ea4"
            ]
        ]
    },
    {
        "id": "ba0215660a17aeb4",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"tracker.home.warning\"}},\"log\":{\"name\":\"Garage door (Node Red) clear_notification\",\"entity_id\":\"cover.garage_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1460,
        "wires": [
            [
                "210f177e0e2d3ea4"
            ]
        ]
    },
    {
        "id": "70976513788fca8f",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"tracker.away\"}},\"log\":{\"name\":\"Garage door (Node Red) clear_notification\",\"entity_id\":\"cover.garage_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1520,
        "wires": [
            [
                "210f177e0e2d3ea4"
            ]
        ]
    },
    {
        "id": "60e0d70b857896c9",
        "type": "api-current-state",
        "z": "7593ec4d.460434",
        "name": "Garage door open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "open",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "cover.garage_door",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 310,
        "y": 980,
        "wires": [
            [
                "35ff688c.a37368"
            ],
            []
        ]
    },
    {
        "id": "210f177e0e2d3ea4",
        "type": "subflow:670bc302.cb732c",
        "z": "7593ec4d.460434",
        "name": "",
        "x": 600,
        "y": 1480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a6da86f902597223",
        "type": "change",
        "z": "7593ec4d.460434",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"garage_door.open\"}},\"log\":{\"name\":\"Garage door (Node Red) clear_notification\",\"entity_id\":\"cover.garage_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1580,
        "wires": [
            [
                "210f177e0e2d3ea4"
            ]
        ]
    },
    {
        "id": "cf205e12f0201a90",
        "type": "server-state-changed",
        "z": "7593ec4d.460434",
        "name": "Garage door closed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "cover.garage_door",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "closed",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 1520,
        "wires": [
            [
                "ba0215660a17aeb4",
                "70976513788fca8f",
                "a6da86f902597223"
            ],
            []
        ]
    },
    {
        "id": "5ed62372.70f88c",
        "type": "inject",
        "z": "57667353.82973c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 17 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "822040b7.781e7"
            ]
        ]
    },
    {
        "id": "822040b7.781e7",
        "type": "ha-get-entities",
        "z": "57667353.82973c",
        "name": "Get input_boolean",
        "server": "3efaa203.1c443e",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "starts_with",
                "value": "input_boolean.plant_",
                "valueType": "str"
            }
        ],
        "output_type": "array",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "9d29e940.eba4f8"
            ]
        ]
    },
    {
        "id": "9d29e940.eba4f8",
        "type": "function",
        "z": "57667353.82973c",
        "name": "Get which plants need to be watered",
        "func": "const states = global.get('homeassistant.homeAssistant.states');\n\nlet entities = msg.payload || [];\nentities = entities.filter((entity) => !entity.entity_id.includes('fake'));\nconst lastWateredEntities = entities.map((entity) => {\n    const dateEntityName = entity.entity_id.replace('input_boolean', 'input_datetime');\n    return states[dateEntityName];\n});\n\nconst daysBetweenEntities = entities.map((entity) => {\n    const dateEntityName = entity.entity_id.replace('input_boolean', 'input_number');\n    return states[dateEntityName];\n});\n\nconst current = new Date();\nlet toNotify = [];\nlet toTurnOff = [];\n\nfor (let index = 0; index < entities.length; index++) {\n    const whenToWater = new Date(lastWateredEntities[index].state);\n    // convert to seconds\n    const duration = parseFloat(daysBetweenEntities[index].state) * 24 * 60 * 60;\n    \n    let copy = new Date(whenToWater);\n    // minus 8 hours so it can notify earlier\n    copy.setSeconds(whenToWater.getSeconds() + duration - 60*60*8);\n    \n    if (copy <= current || entities[index].state === 'off') {\n        toNotify.push(entities[index]);\n    }\n    \n    copy = new Date(whenToWater);\n    copy.setSeconds(whenToWater.getSeconds() + duration);\n    \n    if (copy <= current) {\n        toTurnOff.push(entities[index]);\n    }\n\n\n}\n\nreturn [{ payload: toNotify }, {payload: toTurnOff}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "56a3295.df430d8"
            ],
            [
                "d44c0607.e2d488"
            ]
        ]
    },
    {
        "id": "56a3295.df430d8",
        "type": "split",
        "z": "57667353.82973c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "5f9e6e1d.ebc3b"
            ]
        ]
    },
    {
        "id": "5f9e6e1d.ebc3b",
        "type": "function",
        "z": "57667353.82973c",
        "name": "Format for notification/log",
        "func": "return {\n    \"payload\": {\n    \"notification\": {\n        \"title\": \"Water plant\",\n        \"message\": `🌱 Your plant (${msg.payload.attributes.friendly_name}) needs a drink soon!`,\n        \"data\": {\n            \"tag\": `plant.water.${msg.payload.entity_id}`,\n            \"actions\": [\n                {\n                    \"title\": \"Done!\",\n                    \"action\": `notification.plant.${msg.payload.entity_id}.watered`\n                },\n                {\n                    \"title\": \"Remind me later\",\n                    \"action\": `notification.plant.${msg.payload.entity_id}.remind`\n                },\n                {\n                    \"title\": \"Extend by a day\",\n                    \"action\": `notification.plant.${msg.payload.entity_id}.extend_day`\n                }\n            ],\n            \"clickAction\": \"/lovelace-test/plants\"\n        }\n    },\n    \"log\": {\n        \"name\": `Plant (${msg.payload.attributes.friendly_name})`,\n        \"entity_id\": `${msg.payload.entity_id}`,\n        \"message\": \"notified needs watering\",\n        \"domain\": \"notify\"\n    },\n    \"notify_whom\": 'm_only'\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 180,
        "wires": [
            [
                "a6d1ac9a.2e9e6"
            ]
        ]
    },
    {
        "id": "a799b137.84642",
        "type": "function",
        "z": "57667353.82973c",
        "name": "Find correct plant",
        "func": "const action = msg.payload.event.action;\nconst re = /notification\\.plant\\.(input_boolean\\..*)\\..*/;\nconst groups = re.exec(action);\nif (groups && groups.length > 0) {\n    if (action.includes(\"watered\")) {\n        return [null, { payload: groups[1] }, null];\n    }\n    \n    if (action.includes(\"remind\")) {\n        return [null, null, { payload: groups[1] }];\n    }\n    \n    if (action.includes(\"extend_day\")) {\n        return [{ payload: groups[1] }, null, null];\n    }\n\n}\nreturn [null, null, null];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            [
                "1d8695e4.dd840a"
            ],
            [
                "51294e2f.c12d",
                "b3b4940e.a168f8"
            ],
            [
                "5b1ced5b.fdb524"
            ]
        ]
    },
    {
        "id": "51294e2f.c12d",
        "type": "api-call-service",
        "z": "57667353.82973c",
        "name": "Watered",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "",
        "data": "{\"entity_id\":\"{{payload}}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 820,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5b1ced5b.fdb524",
        "type": "trigger",
        "z": "57667353.82973c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "90",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "payload",
        "outputs": 1,
        "x": 830,
        "y": 500,
        "wires": [
            [
                "f8c4a7e5.e93e88"
            ]
        ]
    },
    {
        "id": "f8c4a7e5.e93e88",
        "type": "api-current-state",
        "z": "57667353.82973c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "{{ payload }}",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "state",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 880,
        "y": 560,
        "wires": [
            [
                "5f9e6e1d.ebc3b"
            ],
            [
                "b2663c23.c9e85"
            ]
        ]
    },
    {
        "id": "b2663c23.c9e85",
        "type": "switch",
        "z": "57667353.82973c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 560,
        "wires": [
            [
                "59b50e29.9a074"
            ],
            []
        ]
    },
    {
        "id": "d709b13b.7f155",
        "type": "change",
        "z": "57667353.82973c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 500,
        "wires": [
            [
                "5b1ced5b.fdb524"
            ]
        ]
    },
    {
        "id": "59b50e29.9a074",
        "type": "change",
        "z": "57667353.82973c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 500,
        "wires": [
            [
                "d709b13b.7f155"
            ]
        ]
    },
    {
        "id": "a581edfd.29fd5",
        "type": "server-events",
        "z": "57667353.82973c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 1,
        "event_type": "mobile_app_notification_action",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 190,
        "y": 440,
        "wires": [
            [
                "d162065a.dffa98"
            ]
        ]
    },
    {
        "id": "59bb3bfd.7a2d44",
        "type": "server-state-changed",
        "z": "57667353.82973c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.plant_",
        "entityidfiltertype": "substring",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 180,
        "y": 520,
        "wires": [
            [
                "59b50e29.9a074",
                "b3b4940e.a168f8"
            ],
            []
        ]
    },
    {
        "id": "d162065a.dffa98",
        "type": "switch",
        "z": "57667353.82973c",
        "name": "",
        "property": "payload.event.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "notification\\.plant\\.input_boolean\\..*\\..*",
                "vt": "str",
                "case": true
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "a799b137.84642"
            ]
        ]
    },
    {
        "id": "b3b4940e.a168f8",
        "type": "function",
        "z": "57667353.82973c",
        "name": "Get correct input_datetime",
        "func": "const entity = msg.data ? msg.data.entity_id : msg.payload;\nconst dateEntity = entity.replace('input_boolean', 'input_datetime');\n\nreturn {\n    \"entity_id\": dateEntity,\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 640,
        "wires": [
            [
                "ed7ef6b7.8d8db8"
            ]
        ]
    },
    {
        "id": "ed7ef6b7.8d8db8",
        "type": "api-current-state",
        "z": "57667353.82973c",
        "name": "Current time",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.date_time_iso",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 430,
        "y": 640,
        "wires": [
            [
                "650c6278.2752bc"
            ]
        ]
    },
    {
        "id": "650c6278.2752bc",
        "type": "api-call-service",
        "z": "57667353.82973c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_datetime",
        "service": "set_datetime",
        "entityId": "",
        "data": "{\"entity_id\":\"{{ entity_id }}\",\"datetime\":\"{{ payload }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 700,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "cd5c5706.73dae8",
        "type": "subflow:670bc302.cb732c",
        "z": "57667353.82973c",
        "name": "",
        "x": 760,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1d8695e4.dd840a",
        "type": "function",
        "z": "57667353.82973c",
        "name": "Get correct input_number (days)",
        "func": "const entity = msg.payload;\nconst numberEntity = entity.replace('input_boolean', 'input_number');\n\nreturn {\n    payload: numberEntity,\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 360,
        "wires": [
            [
                "13953fd0.2cef3"
            ]
        ]
    },
    {
        "id": "13953fd0.2cef3",
        "type": "api-current-state",
        "z": "57667353.82973c",
        "name": "current days",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "{{ payload }}",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "state",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "cd106716.08f308"
            ]
        ]
    },
    {
        "id": "cd106716.08f308",
        "type": "api-call-service",
        "z": "57667353.82973c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_number",
        "service": "increment",
        "entityId": "",
        "data": "{\"entity_id\":\"{{ payload.entity_id }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 880,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d44c0607.e2d488",
        "type": "split",
        "z": "57667353.82973c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 90,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c76284f0.3fe258",
        "type": "api-call-service",
        "z": "57667353.82973c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "{{ payload.entity_id }}",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 340,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "da57f7c8.a65e88",
        "type": "server-state-changed",
        "z": "57667353.82973c",
        "name": "Toggle water plants",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.water_plants",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 60,
        "wires": [
            [
                "822040b7.781e7",
                "7aa398cc.ad9758"
            ],
            []
        ]
    },
    {
        "id": "7aa398cc.ad9758",
        "type": "api-call-service",
        "z": "57667353.82973c",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "input_boolean.water_plants",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a6d1ac9a.2e9e6",
        "type": "api-current-state",
        "z": "57667353.82973c",
        "name": "Not out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 580,
        "y": 200,
        "wires": [
            [
                "cd5c5706.73dae8"
            ],
            []
        ]
    },
    {
        "id": "269037ec.1f81d8",
        "type": "server-state-changed",
        "z": "f71ac145.59035",
        "name": "Back Door unlocked",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "lock.back_door",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "unlocked",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 40,
        "wires": [
            [
                "71c592ae.961fec",
                "5e9ede4e.2ba56"
            ],
            [
                "9d64bb94.c50608"
            ]
        ]
    },
    {
        "id": "71c592ae.961fec",
        "type": "trigger",
        "z": "f71ac145.59035",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "15",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "b0aaad378d4adab9"
            ]
        ]
    },
    {
        "id": "9d64bb94.c50608",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 100,
        "wires": [
            [
                "71c592ae.961fec"
            ]
        ]
    },
    {
        "id": "902adcf9.86dc8",
        "type": "api-call-service",
        "z": "f71ac145.59035",
        "name": "Lock back door",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "lock",
        "service": "lock",
        "entityId": "lock.back_door",
        "data": "{ \"entity_id\": \"lock.back_door\" }",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 720,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9595f732.2197b8",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notify_whom\":\"all_phone_app\",\"notification\":{\"title\":\"Back door lock\",\"message\":\"🔒️ ⚠️ Back door lock jammed!\",\"data\":{\"tag\":\"lock.back_door.error\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Back door lock (Node Red)\",\"entity_id\":\"lock.back_door\",\"message\":\"notified jammed\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 740,
        "wires": [
            [
                "100b4e2c.58c2e2"
            ]
        ]
    },
    {
        "id": "100b4e2c.58c2e2",
        "type": "subflow:670bc302.cb732c",
        "z": "f71ac145.59035",
        "name": "",
        "x": 720,
        "y": 740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "588397ba.e25538",
        "type": "server-state-changed",
        "z": "f71ac145.59035",
        "name": "Back Door low battery",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.back_door_lock_low_battery_level",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 400,
        "wires": [
            [
                "a7eb486.e213cb8"
            ],
            [
                "f3316a7a68bce925"
            ]
        ]
    },
    {
        "id": "a7eb486.e213cb8",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Back door lock\",\"message\":\"🔒️ 🔋️ Back door lock has low battery\",\"data\":{\"tag\":\"lock.back_door.low_battery\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Back door lock (Node Red)\",\"entity_id\":\"lock.back_door\",\"message\":\"notified low battery\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 400,
        "wires": [
            [
                "d460290d.65e668"
            ]
        ]
    },
    {
        "id": "d460290d.65e668",
        "type": "subflow:670bc302.cb732c",
        "z": "f71ac145.59035",
        "name": "",
        "x": 540,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "456d7137.a1999",
        "type": "server-state-changed",
        "z": "f71ac145.59035",
        "name": "Back Door critical battery",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.back_door_lock_power_management_replace_battery_soon",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 500,
        "wires": [
            [
                "30fe3544.b54d9a"
            ],
            [
                "1acd5b83bb9fd923"
            ]
        ]
    },
    {
        "id": "30fe3544.b54d9a",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"Back door lock\",\"message\":\"🔒️ 🔋️ ⚠️ Back door lock has at critical battery level!\",\"data\":{\"tag\":\"lock.back_door.critical_battery\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Back door lock (Node Red)\",\"entity_id\":\"lock.back_door\",\"message\":\"notified critical battery level\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "5c02b253.c7970c"
            ]
        ]
    },
    {
        "id": "5c02b253.c7970c",
        "type": "subflow:670bc302.cb732c",
        "z": "f71ac145.59035",
        "name": "",
        "env": [],
        "x": 540,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "409d1059.82a53",
        "type": "server-events",
        "z": "f71ac145.59035",
        "name": "Zwave door event",
        "server": "3efaa203.1c443e",
        "version": 1,
        "event_type": "zwave_js_notification",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 110,
        "y": 620,
        "wires": [
            [
                "5053b69a.47e1d8"
            ]
        ]
    },
    {
        "id": "5053b69a.47e1d8",
        "type": "switch",
        "z": "f71ac145.59035",
        "name": "Filter by node id",
        "property": "payload.event.node_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "9",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "95288f0c.371ae",
                "5ccaf334.06857c",
                "87a6f89d.021988"
            ]
        ]
    },
    {
        "id": "95288f0c.371ae",
        "type": "api-call-service",
        "z": "f71ac145.59035",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_text",
        "service": "set_value",
        "entityId": "input_text.back_door_status",
        "data": "{\"value\":\"{{ payload.event.event_label }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 570,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5ccaf334.06857c",
        "type": "function",
        "z": "f71ac145.59035",
        "name": "Lock jammed",
        "func": "const event = msg.payload.event;\nif (event.type === 6 && event.event === 11) {\n    return true;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 740,
        "wires": [
            [
                "9595f732.2197b8"
            ]
        ]
    },
    {
        "id": "87a6f89d.021988",
        "type": "api-call-service",
        "z": "f71ac145.59035",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "zwave_js",
        "service": "refresh_value",
        "entityId": "lock.back_door",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 580,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "5e9ede4e.2ba56",
        "type": "api-current-state",
        "z": "f71ac145.59035",
        "name": "Out",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.vacation_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "53bc33b7.1702fc"
            ],
            []
        ]
    },
    {
        "id": "53bc33b7.1702fc",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notify_whom\":\"all_phone_app\",\"notification\":{\"title\":\"Back door lock opened\",\"message\":\"🔒️ ⚠️ Back door lock is open!\",\"data\":{\"tag\":\"lock.back_door.open\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Back door lock (Node Red)\",\"entity_id\":\"lock.back_door\",\"message\":\"notified open\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 160,
        "wires": [
            [
                "529a9fe1.b4e77"
            ]
        ]
    },
    {
        "id": "529a9fe1.b4e77",
        "type": "subflow:670bc302.cb732c",
        "z": "f71ac145.59035",
        "name": "",
        "env": [],
        "x": 540,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7cd25e2631de95ca",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"lock.back_door.open\"}},\"log\":{\"name\":\"Back door lock (Node Red) clear_notification\",\"entity_id\":\"lock.back_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "f7613ffdf4d4658d"
            ]
        ]
    },
    {
        "id": "8de05c610498ea79",
        "type": "server-state-changed",
        "z": "f71ac145.59035",
        "name": "Back Door locked",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "lock.back_door",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "locked",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 320,
        "wires": [
            [
                "7cd25e2631de95ca"
            ],
            []
        ]
    },
    {
        "id": "f3316a7a68bce925",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"lock.back_door.low_battery\"}},\"log\":{\"name\":\"Back door lock low battery (Node Red) clear_notification\",\"entity_id\":\"lock.back_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 365,
        "y": 447,
        "wires": [
            [
                "d460290d.65e668"
            ]
        ]
    },
    {
        "id": "1acd5b83bb9fd923",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"lock.back_door.critical_battery\"}},\"log\":{\"name\":\"Back door lock battery critical (Node Red) clear_notification\",\"entity_id\":\"lock.back_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 560,
        "wires": [
            [
                "5c02b253.c7970c"
            ]
        ]
    },
    {
        "id": "b96182c83a6e0f3a",
        "type": "server-state-changed",
        "z": "f71ac145.59035",
        "name": "Back Door locked",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "lock.back_door",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "locked",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 320,
        "y": 820,
        "wires": [
            [
                "a39b071c904525f6"
            ],
            []
        ]
    },
    {
        "id": "a39b071c904525f6",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"lock.back_door.error\"}},\"log\":{\"name\":\"Back door lock jammed (Node Red) clear_notification\",\"entity_id\":\"lock.back_door\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "b0aaad378d4adab9",
        "type": "api-current-state",
        "z": "f71ac145.59035",
        "name": "Door closed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "binary_sensor.back_door_sensor",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 510,
        "y": 40,
        "wires": [
            [
                "902adcf9.86dc8"
            ],
            [
                "ac2389b6f1c04ed1"
            ]
        ]
    },
    {
        "id": "ac2389b6f1c04ed1",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notify_whom\":\"all_phone_app\",\"notification\":{\"title\":\"Back door is open\",\"message\":\"⚠️ Back door is open!\",\"data\":{\"tag\":\"sensor.back_door.open\",\"priority\":\"high\",\"ttl\":0}},\"log\":{\"name\":\"Back door sensor (Node Red)\",\"entity_id\":\"binary_sensor.back_door_sensor\",\"message\":\"notified open\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 100,
        "wires": [
            [
                "582043461767f7f2"
            ]
        ]
    },
    {
        "id": "582043461767f7f2",
        "type": "subflow:670bc302.cb732c",
        "z": "f71ac145.59035",
        "name": "",
        "env": [],
        "x": 780,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4caea3562cd53d1e",
        "type": "server-state-changed",
        "z": "f71ac145.59035",
        "name": "Back Door closed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.back_door_sensor",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 240,
        "wires": [
            [
                "0a6ab15402c02b58"
            ],
            []
        ]
    },
    {
        "id": "0a6ab15402c02b58",
        "type": "change",
        "z": "f71ac145.59035",
        "name": "clear_notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"notification\":{\"title\":\"clear_notification\",\"message\":\"clear_notification\",\"data\":{\"tag\":\"sensor.back_door.open\"}},\"log\":{\"name\":\"Back door sensor (Node Red) clear_notification\",\"entity_id\":\"sensor.back_door_sensor\",\"message\":\"notified clear_notification\",\"domain\":\"notify\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 240,
        "wires": [
            [
                "f7613ffdf4d4658d"
            ]
        ]
    },
    {
        "id": "f7613ffdf4d4658d",
        "type": "subflow:670bc302.cb732c",
        "z": "f71ac145.59035",
        "name": "",
        "env": [],
        "x": 540,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ed45ea6a.1ae328",
        "type": "inject",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 20,
        "wires": [
            [
                "e380df7b.37f5a"
            ]
        ]
    },
    {
        "id": "5bad29e9.3df878",
        "type": "server-state-changed",
        "z": "96cf0f5b.b0f5e",
        "name": "Hvac action changed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor\\..*_thermostat_hvac_action",
        "entityidfiltertype": "regex",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "idle",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 720,
        "wires": [
            [
                "9bb6b054.a36b6"
            ],
            [
                "b4ea7723.d95748"
            ]
        ]
    },
    {
        "id": "fdc41c57.c040a",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set last started",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_datetime",
        "service": "set_datetime",
        "entityId": "input_datetime.hvac_last_started",
        "data": "{\t   \"datetime\":\"{{ payload }}\"\t}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 480,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4bb47daf.9293d4",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set last stopped",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_datetime",
        "service": "set_datetime",
        "entityId": "input_datetime.hvac_last_stopped",
        "data": "{\t   \"datetime\":\"{{ payload }}\"\t}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 480,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "fb8238b4.ff3bc8",
        "type": "server-state-changed",
        "z": "96cf0f5b.b0f5e",
        "name": "Hvac fan state changed",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor\\..*_thermostat_fan_state",
        "entityidfiltertype": "regex",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "Idle / off",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 860,
        "wires": [
            [
                "ed63ccc4.c6b35"
            ],
            [
                "f659cedb.8c3fb"
            ]
        ]
    },
    {
        "id": "9bb6b054.a36b6",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Current time",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.date_time_iso",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 310,
        "y": 720,
        "wires": [
            [
                "fdc41c57.c040a"
            ]
        ]
    },
    {
        "id": "b4ea7723.d95748",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Current time",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.date_time_iso",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 310,
        "y": 780,
        "wires": [
            [
                "4bb47daf.9293d4"
            ]
        ]
    },
    {
        "id": "f9c283fe.7949b",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set last started",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_datetime",
        "service": "set_datetime",
        "entityId": "input_datetime.hvac_fan_last_started",
        "data": "{\t   \"datetime\":\"{{ payload }}\"\t}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 520,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "76fb0329.5df51c",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set last stopped",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_datetime",
        "service": "set_datetime",
        "entityId": "input_datetime.hvac_fan_last_stopped",
        "data": "{\t   \"datetime\":\"{{ payload }}\"\t}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 520,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ed63ccc4.c6b35",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Current time",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.date_time_iso",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 350,
        "y": 860,
        "wires": [
            [
                "f9c283fe.7949b"
            ]
        ]
    },
    {
        "id": "f659cedb.8c3fb",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Current time",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.date_time_iso",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "x": 350,
        "y": 920,
        "wires": [
            [
                "76fb0329.5df51c"
            ]
        ]
    },
    {
        "id": "9a48aeab.ba6ca",
        "type": "server-state-changed",
        "z": "96cf0f5b.b0f5e",
        "name": "Hvac fan on",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.upstairs_thermostat_fan_state",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "Running / running low",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 1040,
        "wires": [
            [
                "efd26d02.43b73"
            ],
            [
                "5662c0eb.95fad"
            ]
        ]
    },
    {
        "id": "a8499109.faa1b",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set fan to auto",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_fan_mode",
        "entityId": "climate.upstairs_thermostat",
        "data": "{\"fan_mode\":\"Auto low\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 360,
        "y": 1160,
        "wires": [
            [
                "ae7abcf0.179ad"
            ]
        ]
    },
    {
        "id": "ddb735d2.aac068",
        "type": "function",
        "z": "96cf0f5b.b0f5e",
        "name": "Should run fan?",
        "func": "const hvac_common = msg.payload.hvac_common;\nconst upstairs_state = msg.payload.upstairs.state;\nconst downstairs_state = msg.payload.downstairs.state;\n\nconst states = [upstairs_state, downstairs_state];\n\nlet fan_running = states.some((state) => state.fan !== 'Idle / off');\nlet fan_cir_mode = states.some((state) => state.fan_mode === 'Circulation');\nlet hvac_running = states.some((state) => state.hvac !== 'idle');\n\nconst vacation = msg.payload.vacation;\n\nconst hvac_last_stopped = new Date(hvac_common.hvac_last_stopped);\nconst hvac_fan_last_stopped = new Date(hvac_common.hvac_fan_last_stopped);\n\nconst last_stopped = hvac_last_stopped < hvac_fan_last_stopped ? hvac_fan_last_stopped : hvac_last_stopped;\nlast_stopped.setSeconds(last_stopped.getSeconds() + (vacation ? 6 : 3.5)*60*60);\n\n\nconst should_run = new Date() >= last_stopped && \n    !hvac_running && \n    !fan_running &&\n    !fan_cir_mode;\n\nreturn {\n    payload: {\n        should_run,\n        should_run_at: last_stopped,\n        fan_cir_mode\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 100,
        "wires": [
            [
                "5f965ae1.2224a4"
            ]
        ]
    },
    {
        "id": "5f965ae1.2224a4",
        "type": "switch",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "property": "payload.should_run",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 100,
        "wires": [
            [
                "a8399af3.442548"
            ]
        ]
    },
    {
        "id": "a8399af3.442548",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set fan to low (on)",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_fan_mode",
        "entityId": "climate.upstairs_thermostat",
        "data": "{\"fan_mode\":\"Low\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c0e8a442.84ce08",
        "type": "delay",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 280,
        "y": 100,
        "wires": [
            [
                "ddb735d2.aac068"
            ]
        ]
    },
    {
        "id": "ae7abcf0.179ad",
        "type": "delay",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 340,
        "y": 1220,
        "wires": [
            [
                "44c22302.87103c"
            ]
        ]
    },
    {
        "id": "44c22302.87103c",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Thermorstat state",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.upstairs_thermostat",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "9335eb55.8ef848"
            ]
        ]
    },
    {
        "id": "9335eb55.8ef848",
        "type": "switch",
        "z": "96cf0f5b.b0f5e",
        "name": "retry",
        "property": "data.attributes.fan_mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Auto low",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 1340,
        "wires": [
            [
                "24ee19c6.928506"
            ]
        ]
    },
    {
        "id": "bc349fab.34bb5",
        "type": "inject",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 1000,
        "wires": [
            [
                "24ee19c6.928506"
            ]
        ]
    },
    {
        "id": "24ee19c6.928506",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Thermorstat state",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.upstairs_thermostat",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 550,
        "y": 1040,
        "wires": [
            [
                "80ba867f.cf3328"
            ]
        ]
    },
    {
        "id": "80ba867f.cf3328",
        "type": "switch",
        "z": "96cf0f5b.b0f5e",
        "name": "Not circulation mode",
        "property": "data.attributes.fan_mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Circulation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "a8499109.faa1b"
            ]
        ]
    },
    {
        "id": "b04aae6d.cdb77",
        "type": "comment",
        "z": "96cf0f5b.b0f5e",
        "name": "Prevent fan from being on for too long",
        "info": "",
        "x": 170,
        "y": 1000,
        "wires": []
    },
    {
        "id": "becea10d.07ef3",
        "type": "debug",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 140,
        "wires": []
    },
    {
        "id": "b01e1228.dc41a",
        "type": "function",
        "z": "96cf0f5b.b0f5e",
        "name": "Should run hvac (upstairs)?",
        "func": "const payload = msg.payload;\nconst upstairs = payload.upstairs;\nconst outside = payload.outside;\nconst away = payload.away;\n\nconst temp = upstairs.temp;\nconst time = upstairs.time;\nconst state = upstairs.state;\nconst hvac_running = state.hvac !== 'idle';\nconst tv = state.tv;\nconst heat = state.heat;\n\nif(state.hvac_mode === \"off\") {\n    return {\n        payload: {\n            should_run: false\n        }\n    }\n}\nconst current_day = new Date().getDay();\nconst is_weekday = current_day < 6 && current_day !== 0;\n\n// count Friday as weekend and Sunday as weekday for night\nconst is_weekday_night = current_day !== 5 && current_day !== 6;\n\nconst current_time = new Date();\n\nconst midnight = new Date();\nmidnight.setHours(0);\nmidnight.setMinutes(0);\nmidnight.setMilliseconds(0);\n\nconst day_night_str = is_weekday ? 'day' : 'end';\nconst day_night_str_night = is_weekday_night ? 'day' : 'end';\n\nlet day_start = timeStringToDate(time[`day_start_week${day_night_str}`]);\nlet night_start = timeStringToDate(time[`night_start_week${day_night_str_night}`]);\n\nconst is_day_schedule = current_time >= day_start &&\n                current_time < night_start;\n\nconst temp_target_schedule = away ? temp.away : (is_day_schedule ? temp.day : temp.night);\n\nconst temp_diff = Math.abs(temp_target_schedule - outside);\nconst breakpoints = [\n    { diff: 20, adjust: 1, hours_to_cooldown: 5.5, hours_to_heatup: 2 },\n    { diff: 14, adjust: 1, hours_to_cooldown: 6, hours_to_heatup: 3 },\n    { diff: 7, adjust: 1, hours_to_cooldown: 7, hours_to_heatup: 5 },\n    { diff: 4, adjust: 1, hours_to_cooldown: 9, hours_to_heatup: 7 },\n    { diff: 2, adjust: 0.5, hours_to_cooldown: 14, hours_to_heatup: 9 }\n];\n\nconst last_breakpoint = breakpoints[breakpoints.length - 1];\nlet temp_adjust = last_breakpoint.adjust;\nlet hours_to_cooldown = last_breakpoint.hours_to_cooldown;\nlet hours_to_heatup = last_breakpoint.hours_to_heatup;\n\nfor (let index = 0; index < breakpoints.length; index++){\n    const breakpoint = breakpoints[index];\n    if (breakpoint.diff <= temp_diff) {\n        temp_adjust = breakpoint.adjust;\n        hours_to_cooldown = breakpoint.hours_to_cooldown;\n        hours_to_heatup = breakpoint.hours_to_heatup;\n        break;\n    } \n}\n\nif (heat) {\n    night_start.setHours(night_start.getHours() - hours_to_cooldown);\n    if (night_start < midnight) {\n        night_start.setDate(current_time.getDate());\n    }\n} else {\n    day_start.setHours(day_start.getHours() - hours_to_heatup);\n}\n\nconst is_day = current_time >= day_start &&\n                current_time < night_start;\nconst ran_today = new Date(upstairs.temp.hvac_last_stopped) <= midnight;\nconst is_day_or_run = is_day || (is_day_schedule && ran_today);\n\nconst temp_target = away ? temp.away : \n    (is_day_or_run ? temp.day : temp.night);\n    \nlet temp_adjusted = temp_target;\n\nif (heat) {\n    temp_adjusted = temp_target + temp_adjust;\n} else {\n    temp_adjusted = temp_target - temp_adjust;\n}\n\nlet temp_adjusted_opposite_limit = temp_target + ((is_day ? 1 : 0.5) * (heat ? -1 : 1));\n\n// if we already reach the target temp with adjustment (e.g 22 + 1.5)\n// then set it back to the original target temp with 0.5 adjustment (e.g 22 - 0.5)\nif ((heat && temp.current > temp_adjusted_opposite_limit) || \n    (!heat && temp.current < temp_adjusted_opposite_limit)) {\n    temp_adjusted = temp_adjusted_opposite_limit;\n}\n\n// dinner -> downstairs -> cooler so we can raise the heat ceiling \nif (!heat) {\n    const dinner_time_start = timeStringToDate(time.meal_start);\n    \n    const dinner_time_before = new Date(dinner_time_start);\n    dinner_time_before.setHours(dinner_time_start.getHours() - 1);\n    \n    const dinner_time_tv_check = new Date(dinner_time_start);\n    dinner_time_tv_check.setHours(dinner_time_start.getHours() + 1);\n\n    \n    const dinner_time_end = new Date(dinner_time_start);\n    dinner_time_end.setHours(dinner_time_end.getHours() + 2);\n    \n    const tv_history = msg.tv_history;\n    \n    const now = new Date();\n    \n    const tv_last_changed = new Date(tv.last_changed);\n    \n    const tv_off = tv_history.filter((x) => {\n        const last_changed = new Date(x.last_changed);\n        return x.state === 'off' &&\n            last_changed >= dinner_time_tv_check\n    });\n    \n    if (now > dinner_time_before && now < dinner_time_end && !tv_off) {\n        temp_adjusted = temp_adjusted + 1;\n    }\n}\n\nconst tv_on = tv.state === \"on\";\n\nlet should_run = (!hvac_running || \n    (heat && temp_adjusted > temp.current) ||\n    (!heat && temp_adjusted < temp.current)) &&\n    !state.manual_control &&\n    temp_adjusted != temp.target;\n\nif (should_run && !is_day && !heat) {\n    const early_morning = new Date(midnight);\n    early_morning.setHours(1);\n    should_run = !tv_on || current_time > early_morning;\n}\n\nreturn {\n    payload: {\n        should_run,\n        temp_adjusted,\n        temp_diff,\n        day_start,\n        night_start,\n        is_day_schedule,\n        is_day,\n        hours_to_cooldown,\n        hours_to_heatup\n    }\n};\n\nfunction timeStringToDate(time_string) {\n    const date = new Date();\n    const split = time_string.split(':');\n    date.setHours(split[0]);\n    date.setMinutes(split[1]);\n    return date;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 260,
        "wires": [
            [
                "e8616b7.2c9cb98",
                "becea10d.07ef3"
            ]
        ]
    },
    {
        "id": "60773c6c.8bafd4",
        "type": "debug",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 40,
        "wires": []
    },
    {
        "id": "e8616b7.2c9cb98",
        "type": "switch",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "property": "payload.should_run",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 180,
        "wires": [
            [
                "959ed834.cec908"
            ]
        ]
    },
    {
        "id": "959ed834.cec908",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set temp",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_temperature",
        "entityId": "climate.upstairs_thermostat",
        "data": "{\"temperature\":\"{{ payload.temp_adjusted }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 580,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e4a11c73.6aced",
        "type": "server-events",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "server": "3efaa203.1c443e",
        "version": 1,
        "event_type": "call_service",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 110,
        "y": 400,
        "wires": [
            [
                "ed770406.9e7de8"
            ]
        ]
    },
    {
        "id": "86eb3abb.3f63f8",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Turn on manual control",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_on",
        "entityId": "",
        "data": "{\"entity_id\":\"{{ payload.event.service_data.entity_id }}_manual_control\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 760,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9d02a340.5f504",
        "type": "server-state-changed",
        "z": "96cf0f5b.b0f5e",
        "name": "Manual control on",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean\\..*_thermostat_manual_control",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "",
        "forType": "num",
        "forUnits": "hours",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 540,
        "wires": [
            [
                "48629864.ef6cb8"
            ],
            [
                "64edf37b.fad46c"
            ]
        ]
    },
    {
        "id": "d3695e2f.7b4d7",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Turn off manual control",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_boolean",
        "service": "turn_off",
        "entityId": "",
        "data": "{\"entity_id\":\"{{ topic }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 560,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "48629864.ef6cb8",
        "type": "trigger",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "d3695e2f.7b4d7"
            ]
        ]
    },
    {
        "id": "64edf37b.fad46c",
        "type": "change",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 100,
        "y": 600,
        "wires": [
            [
                "48629864.ef6cb8"
            ]
        ]
    },
    {
        "id": "efd26d02.43b73",
        "type": "trigger",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "35",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 1040,
        "wires": [
            [
                "24ee19c6.928506"
            ]
        ]
    },
    {
        "id": "5662c0eb.95fad",
        "type": "change",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 100,
        "y": 1100,
        "wires": [
            [
                "efd26d02.43b73"
            ]
        ]
    },
    {
        "id": "e380df7b.37f5a",
        "type": "function",
        "z": "96cf0f5b.b0f5e",
        "name": "Gather data",
        "func": "const states = global.get('homeassistant.homeAssistant.states');\n\nlet hvac_common = {};\nlet upstairs = getHvacInfo('upstairs', states);\nlet downstairs = getHvacInfo('downstairs', states);\n\nhvac_common.hvac_last_started = states['input_datetime.hvac_last_started'].state;\nhvac_common.hvac_last_stopped = states['input_datetime.hvac_last_stopped'].state;\nhvac_common.hvac_fan_last_started = states['input_datetime.hvac_fan_last_started'].state;\nhvac_common.hvac_fan_last_stopped = states['input_datetime.hvac_fan_last_stopped'].state;\n\n\nconst priate_weather = parseFloat(states['weather.weather'].state !== 'unavailable' ? \n    states['weather.weather'].attributes.temperature :\n    upstairs.temp.current);\n    \nconst open_weather = parseFloat(states['weather.openweathermap'].state !== 'unavailable' ? \n    states['weather.openweathermap'].attributes.temperature :\n    upstairs.temp.current);\n    \nlet outside = priate_weather;\n\nif (upstairs.state.heat && priate_weather > open_weather) {\n    outside = open_weather;\n}\n\nif (!upstairs.state.heat && priate_weather < open_weather) {\n    outside = open_weather;\n}\n\nconst away = states['sensor.away'].state === 'True';\nconst vacation = states['input_boolean.vacation_mode'].state === 'on';\nreturn {\n    payload: {\n        upstairs,\n        downstairs,\n        hvac_common,\n        outside,\n        away,\n        vacation\n    }\n};\n\nfunction getHvacInfo(floor, states) {\n    const thermostat = states[`climate.${floor}_thermostat`];\n    const mode = thermostat.state;\n    \n    let temp = {};\n    let state = {};\n    let time = {};\n\n    if (mode !== 'off') {\n        temp.night = parseFloat(states[`input_number.${mode}_temp_night`].state);\n        temp.day = parseFloat(states[`input_number.${mode}_temp_day`].state);\n        temp.away = parseFloat(states[`input_number.${mode}_temp_away`].state);\n        \n        state.manual_control = states[`input_boolean.${floor}_thermostat_manual_control`].state === 'on';\n        time.meal_start = states['input_datetime.heat_meal_start'].state;\n        state.tv = states['media_player.living_room_tv'];\n\n        if (floor === 'downstairs') {\n            state.light = states['switch.cabinet_light'].state;\n            \n            if (mode === 'heat') {\n                temp.meal = parseFloat(states[`input_number.${mode}_temp_meal`].state);\n            }\n        }\n        \n        if (floor === 'upstairs') {\n            time.day_start_weekday = states[`input_datetime.${mode}_day_start_weekday`].state;\n            time.day_start_weekend = states[`input_datetime.${mode}_day_start_weekend`].state;\n            time.night_start_weekday = states[`input_datetime.${mode}_night_start_weekday`].state;\n            time.night_start_weekend = states[`input_datetime.${mode}_night_start_weekend`].state;\n        }\n    }\n    \n    temp.current = parseFloat(thermostat.attributes.current_temperature);\n    temp.target = parseFloat(thermostat.attributes.temperature);\n\n    state.hvac = states[`sensor.${floor}_thermostat_hvac_action`].state;\n    state.hvac_mode = mode;\n    state.fan = states[`sensor.${floor}_thermostat_fan_state`].state;\n    state.fan_mode = thermostat.attributes.fan_mode;\n    state.heat = state.hvac_mode === 'heat';\n    return { temp, time, state }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 100,
        "wires": [
            [
                "c0e8a442.84ce08",
                "60773c6c.8bafd4",
                "1566bf59.068c91"
            ]
        ]
    },
    {
        "id": "d2005cb2.1f367",
        "type": "debug",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 40,
        "wires": []
    },
    {
        "id": "ed770406.9e7de8",
        "type": "switch",
        "z": "96cf0f5b.b0f5e",
        "name": "Match entity id",
        "property": "payload.event.service_data.entity_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "climate\\..*thermostat$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 400,
        "wires": [
            [
                "636327ad.2574b8"
            ]
        ]
    },
    {
        "id": "636327ad.2574b8",
        "type": "switch",
        "z": "96cf0f5b.b0f5e",
        "name": "Not node red user",
        "property": "payload.context.user_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "e697ba7c71564eed8f744d3011159ff6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "812be295.f7434"
            ]
        ]
    },
    {
        "id": "812be295.f7434",
        "type": "change",
        "z": "96cf0f5b.b0f5e",
        "name": "Change entity id",
        "rules": [
            {
                "t": "change",
                "p": "payload.event.service_data.entity_id",
                "pt": "msg",
                "from": "climate.",
                "fromt": "str",
                "to": "input_boolean.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 460,
        "wires": [
            [
                "86eb3abb.3f63f8"
            ]
        ]
    },
    {
        "id": "23e45788.0e7a38",
        "type": "function",
        "z": "96cf0f5b.b0f5e",
        "name": "Should run hvac (downstairs)?",
        "func": "const payload = msg.payload;\nconst downstairs = payload.downstairs;\n\nconst temp = downstairs.temp;\nconst time = downstairs.time;\nconst state = downstairs.state;\n\nconst tv_history = msg.tv_history;\nconst tv = state.tv;\nconst hvac_running = state.hvac !== 'idle';\nconst heat = state.heat;\n\nif(state.hvac_mode === \"off\") {\n    return {\n        payload: {\n            should_run: false\n        }\n    }\n}\n\nconst now = new Date();\n\nconst tv_last_changed = new Date(tv.last_changed);\n\nconst dinner_time_start = timeStringToDate(time.meal_start);\nconst dinner_time_end = new Date(dinner_time_start);\ndinner_time_end.setHours(dinner_time_end.getHours() + 2);\n\nconst tv_on = tv_history.filter((x) => {\n    const last_changed = new Date(x.last_changed);\n    return x.state === 'on' &&\n        last_changed >= dinner_time_start &&\n        last_changed <= dinner_time_end;\n});\nconst on_more_than_once = tv_on.length > 1;\n\nlet dinner_time_after = new Date(tv_last_changed);\nif (tv_last_changed < dinner_time_start) {\n     dinner_time_after = new Date(dinner_time_start);\n}\n\ndinner_time_after.setMinutes(dinner_time_after.getMinutes() + 15);\n\nconst dinner_time = tv.state === 'on' && \n    !on_more_than_once &&\n    state.light === 'off' &&\n    now >= dinner_time_start && \n    now <= dinner_time_after;\n\nlet temp_target = heat ? temp.night : temp.day;\nconst temp_diff_inside = heat ? Math.abs(temp.meal - temp.current) : 0;\n\nif (heat && dinner_time && temp_diff_inside > 2) {\n    temp_target = temp.meal;\n}\n\nlet temp_adjusted = temp_target;\n\nif (!dinner_time) {\n    temp_adjusted = temp_target + 1 * (heat ? 1 : -1);\n    let temp_adjusted_opposite_limit = temp_target + 0.5 * (heat ? -1 : 1);\n    \n    // if we already reach the target temp with adjustment (e.g 22 + 1.5)\n    // then set it back to the original target temp with 0.5 adjustment (e.g 22 - 0.5)\n    if ((heat && temp.current > temp_adjusted_opposite_limit) || \n        (!heat && temp.current < temp_adjusted_opposite_limit)) {\n        temp_adjusted = temp_adjusted_opposite_limit;\n    }\n}\n\nconst should_run = !hvac_running &&\n    !state.manual_control &&\n    temp_adjusted != temp.target;\n\nreturn {\n    payload: {\n        should_run,\n        on_more_than_once,\n        dinner_time,\n        temp_diff_inside,\n        temp_adjusted\n    }\n};\n\nfunction timeStringToDate(time_string) {\n    const date = new Date();\n    const split = time_string.split(':');\n    date.setHours(split[0]);\n    date.setMinutes(split[1]);\n    return date;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "dfe98ce7.13a84",
                "8d51204b196bd3cb"
            ]
        ]
    },
    {
        "id": "dfe98ce7.13a84",
        "type": "switch",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "property": "payload.should_run",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 240,
        "wires": [
            [
                "ec75050b.4394f8"
            ]
        ]
    },
    {
        "id": "ec75050b.4394f8",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set temp",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_temperature",
        "entityId": "climate.downstairs_thermostat",
        "data": "{\"temperature\":\"{{ payload.temp_adjusted }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 740,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8d51204b196bd3cb",
        "type": "debug",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 320,
        "wires": []
    },
    {
        "id": "45a40847d7d5751e",
        "type": "comment",
        "z": "96cf0f5b.b0f5e",
        "name": "Turn off HVAC when window open",
        "info": "",
        "x": 160,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f667120e5818030d",
        "type": "server-state-changed",
        "z": "96cf0f5b.b0f5e",
        "name": "Window open",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.window_sensor",
        "entityidfiltertype": "substring",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 1460,
        "wires": [
            [
                "3f1655f80ca08c28"
            ],
            []
        ]
    },
    {
        "id": "af94c44d8e41cb37",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set last HVAC state",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_text",
        "service": "set_value",
        "entityId": "input_text.last_hvac_mode",
        "data": "{\"value\":\"{{ payload }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 490,
        "y": 1460,
        "wires": [
            [
                "51d7d5b36fab5ddc"
            ]
        ]
    },
    {
        "id": "3f1655f80ca08c28",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Thermorstat state",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "climate.upstairs_thermostat",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 290,
        "y": 1460,
        "wires": [
            [
                "af94c44d8e41cb37"
            ]
        ]
    },
    {
        "id": "51d7d5b36fab5ddc",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Turn off HVAC",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_hvac_mode",
        "entityId": "climate.upstairs_thermostat, climate.downstairs_thermostat",
        "data": "{\"hvac_mode\":\"off\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 700,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "4a70280a6835501d",
        "type": "api-call-service",
        "z": "96cf0f5b.b0f5e",
        "name": "Set HVAC back",
        "server": "3efaa203.1c443e",
        "version": 3,
        "debugenabled": false,
        "service_domain": "climate",
        "service": "set_hvac_mode",
        "entityId": "climate.upstairs_thermostat, climate.downstairs_thermostat",
        "data": "{\"hvac_mode\":\"{{ payload }}\"}",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 480,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "e2629d5e3f08c86e",
        "type": "api-current-state",
        "z": "96cf0f5b.b0f5e",
        "name": "Last HVAC state",
        "server": "3efaa203.1c443e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_text.last_hvac_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 280,
        "y": 1580,
        "wires": [
            [
                "4a70280a6835501d"
            ]
        ]
    },
    {
        "id": "545962cbb34d7186",
        "type": "server-state-changed",
        "z": "96cf0f5b.b0f5e",
        "name": "Window open >45 mins",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.window_sensor",
        "entityidfiltertype": "substring",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 1700,
        "wires": [
            [
                "3cc1b102e9ef823e"
            ],
            [
                "d5dca87efeacbcb2",
                "05cb5a69019c3541"
            ]
        ]
    },
    {
        "id": "f49ed754787c53cf",
        "type": "comment",
        "z": "96cf0f5b.b0f5e",
        "name": "Warning window",
        "info": "",
        "x": 100,
        "y": 1660,
        "wires": []
    },
    {
        "id": "3cc1b102e9ef823e",
        "type": "trigger",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "45",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 370,
        "y": 1700,
        "wires": [
            [
                "1451ca6d3cdc3f75"
            ]
        ]
    },
    {
        "id": "d5dca87efeacbcb2",
        "type": "change",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 1760,
        "wires": [
            [
                "3cc1b102e9ef823e"
            ]
        ]
    },
    {
        "id": "1451ca6d3cdc3f75",
        "type": "function",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "func": "const data = msg.data;\nconst attrs = data.new_state.attributes;\nreturn {\n    \"payload\": {\n        \"notification\": {\n            \"title\": \"⚠️ 🪟 Window is open\",\n            \"message\": `${attrs.friendly_name} is open for >45 minutes`,\n            \"data\": {\n                \"priority\": \"high\",\n                \"ttl\": 0,\n                \"tag\": `window.open.${data.entity_id}`,\n                \"persistent\": true\n            }\n        },\n        \"log\": {\n            \"name\": `${attrs.friendly_name}`,\n            \"entity_id\": `${data.entity_id}`,\n            \"message\": \"notified open\",\n            \"domain\": \"notify\"\n        },\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1700,
        "wires": [
            [
                "1b046688352db6d4"
            ]
        ]
    },
    {
        "id": "1b046688352db6d4",
        "type": "subflow:670bc302.cb732c",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "x": 720,
        "y": 1700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b80b9e64999040ec",
        "type": "server-state-changed",
        "z": "96cf0f5b.b0f5e",
        "name": "Window close",
        "server": "3efaa203.1c443e",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.window_sensor",
        "entityidfiltertype": "substring",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 90,
        "y": 1580,
        "wires": [
            [
                "e2629d5e3f08c86e"
            ],
            []
        ]
    },
    {
        "id": "e0b4b357dab7a48c",
        "type": "comment",
        "z": "96cf0f5b.b0f5e",
        "name": "Turn HVAC on when window close",
        "info": "",
        "x": 160,
        "y": 1540,
        "wires": []
    },
    {
        "id": "1566bf59.068c91",
        "type": "api-get-history",
        "z": "96cf0f5b.b0f5e",
        "name": "TV history 3h",
        "server": "3efaa203.1c443e",
        "version": 0,
        "startdate": "",
        "enddate": "",
        "entityid": "media_player.living_room_tv",
        "entityidtype": "is",
        "useRelativeTime": true,
        "relativeTime": "5h",
        "flatten": true,
        "output_type": "array",
        "output_location_type": "msg",
        "output_location": "tv_history",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "b01e1228.dc41a",
                "23e45788.0e7a38"
            ]
        ]
    },
    {
        "id": "05cb5a69019c3541",
        "type": "delay",
        "z": "96cf0f5b.b0f5e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 1760,
        "wires": [
            [
                "ac4d460178446eec"
            ]
        ]
    },
    {
        "id": "ac4d460178446eec",
        "type": "function",
        "z": "96cf0f5b.b0f5e",
        "name": "clear",
        "func": "const data = msg.data;\nconst attrs = data.new_state.attributes;\n\nreturn {\n    \"payload\": {\n        \"notification\": {\n            \"title\": \"clear_notification\",\n            \"message\": `clear_notification`,\n            \"data\": {\n                \"tag\": `window.open.${data.entity_id}`\n            }\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1760,
        "wires": [
            [
                "1b046688352db6d4"
            ]
        ]
    }
]